

function dispatch_cartUpdate(e) {
  fetch(`${window.themeVariables.routes.cartUrl}.js`).then((async e => {
    let t = await e.json();
    document.documentElement.dispatchEvent(new CustomEvent("cart:updated", {
      bubbles: !0,
      detail: {
        cart: t
      }
    }))
  }));
}

Shopify.enable_namagoo = false;
Shopify.cart_item_count = function () {
  $.getJSON('/cart.js', function (cart) {
    var cartCount = cart.item_count;
    $(".header__cart-count").html(cartCount);
    $('.header__cart-count.header__cart-count--floating.bubble-count').text(cartCount);
    let cartValue
    if (cart.original_total_price) {
      cartValue = cart.original_total_price;
    } else {
      cartValue = 0
    }
    if (Shopify.redeem_points) {
      redeemLoyaltyPoints()
      // info: Update Cart Amount with Loyalty Points
      init_nector_discount_preview(cartValue);
      $('.redeemable_points').text(sessionStorage.getItem('Redeemable Points'))
    } else {
      if ($('.signin_redeem.redeem_points').length) {
        $('.redeem_now').addClass('visually-hidden')
        $('.get_points').removeClass('visually-hidden')
        $('.custom-checkbox').prop('checked', false)
        redeemLoyaltyPoints()
      }
    }
  })
};
var userSource = ""; userSource = navigator.userAgent.includes("Mobile") ? "Mobile" : navigator.userAgent.includes("iPad") ? "Tablet" : "Desktop", $(".featured-collections").on("click", function () { let e = $(this).siblings(".section__header").find('.tabs-nav__item[aria-expanded="true"]').text(); clevertap.event.push("Homepage Cards section clicked", { userSource: userSource, "secttion Title": e }) }), $(".product-item__quick-form").on("click", function () { let e = $(this).parents(".product-item__info").find(".product-item-meta__title").text(), t = $(this).parents(".product-item__info").find(".price--highlight").text().split("price")[1]; clevertap.event.push("Quick Buy Clicked", { "Product Title": e, Price: t, userSource: userSource }) }), $(".gokwik-checkout").click(function () { clevertap.event.push("GoKwik Button Clicked") }), $("#mini-cart-form").submit(function () { var e = $(".cart-total").val(), t = "", i = []; $("#mini-cart .line-item").each(function (e, n) { var o = $(this).find(".product-item-meta__title").text(), r = $(this).find(".product-item-meta__title").attr("data-product_id"), c = $(this).find(".price--highlight").text().split("price")[1], a = $(this).find(".product-item-meta__title").attr("data-product_type"), l = $(this).find(".quantity-selector__input").val(); t = 0 == e ? o : t + "," + o, i.push({ item_name: o, item_id: r, price: c, item_category: a, quantity: l }) }), clevertap.event.push("Checkout Button Clicked", { Amount: e, "Product Name": t }), dataLayer.push({ ecommerce: null }), dataLayer.push({ event: "begin_checkout", ecommerce: { items: i } }) }), $(".footer__item-content .linklist__item").each(function () { $(this).on("click", function () { let e = $(this).text().trim(); clevertap.event.push("Footer Menu Item Clicked", { Item: e, Source: "Footer" }) }) }), $(".header__inline-navigation .header__linklist-item").each(function () { $(this).on("click", function () { let e = $(this).attr('data-item-title').trim(); clevertap.event.push("Header Menu Item Clicked", { Item: e, Source: "Header Desktop" }) }) }), $('a[aria-controls="mini-cart"]').click(function () { clevertap.event.push("Slider Cart Opened", { Source: "Header" }) }), window.matchMedia("(max-width: 768px)").matches && ($(".footer__item-title").append('\n  <span class="expanded toggle">+</span>\n  <span class="collapsed visually-hidden toggle">-</span>\n  '), $(".footer__item--links").click(function () { $(this).find(".footer__item-content").slideToggle(), $(this).find("span.toggle").toggleClass("visually-hidden") })), $(".myDropdown .toggle-link").click(function () { $(".myDropdown .dropdown-menu").removeClass("visually-hidden") }), $(".myDropdown .close-popup").click(function () { $(".myDropdown .dropdown-menu").addClass("visually-hidden") }), $(document).click(function (e) { e.stopPropagation(), 0 === $(".myDropdown").has(e.target).length && $(".dropdown-menu").addClass("visually-hidden") }), $("collapsible-content .mobile-nav .mobile-nav__item").each(function () { $(this).on("click", function () { let e = $(this).text().trim(); clevertap.event.push("Header Menu Item Clicked", { Item: e, Source: "Hamburger" }) }) });
  $("button.press-list__logo-item.tap-area").hover(function () { $(this).trigger("click") }), $(".product-item").each(function () { $(this).find(".meta-label-new-arrival").length && $(this).find(".lowest-price ").remove() }), $(document).ready(function () { function e(e, t) { let i = (e = e[t]).getAttribute("data-price"); i = parseInt(i); let n = e.parentElement.className; if (Shopify.enable_namagoo && n.includes("custom-product-card_namogoo") && localStorage.getItem("Namogoo")) { let o = i / 100 * JSON.parse(localStorage.getItem("Namogoo")).discountValue, r = e.nextElementSibling.getAttribute("data-compare-price"), c = r - (i -= o), a = Math.round(100 * c / r), l = e.offsetParent.children[0], u = e.parentElement.nextElementSibling; l.className.includes("custom-saved-price-lable") && (l.innerHTML = "You Save " + a + "%"), u.className.includes("custom-save-price") && (u.innerHTML = "You Save: " + Shopify.formatMoney(c, Shopify.money_format) + " (" + a + "%) "), e.className.includes("product-card-price-varies") ? e.innerHTML = "From " + Shopify.formatMoney(i, Shopify.money_format) : e.innerHTML = Shopify.formatMoney(i, Shopify.money_format) } } if (Shopify.enable_flash_sale || Shopify.enable_namagoo) { let t = $(".product-card-price"); for (let i = 0; i < t.length; i++)e(t, i) } });

function atcEvent(selector) {
  var clickedElement = $(selector);
  const prodName = document.getElementById("productTitle")?.value;
  //const category = clickedElement.parents('.product__wrapper').find(".product-item-meta__title").data('product_type');
  let salePrice = document.getElementById("productPrice")?.value;
  let MRP = document.getElementById("productComparePrice")?.value
  MRP = Number(MRP) / 100;
  salePrice = Number(salePrice) / 100;
  let variantTitle = '';
  const variantId = document.querySelector('.submit-personalization')?.dataset?.varientid;
  const variantData = JSON.parse(document.querySelector('.personilaztion-message-modal').dataset.variant_personalization_id);

  let foundObject = null;
  for (const key in variantData) {
    if (variantData[key].id === variantId) {
      foundObject = variantData[key];
      variantTitle = key;
      break;
    }
  }


  //ATC datalayer event for quick ATC with 1 variant
  dataLayer.push({
    'event': 'add_to_cart',
    'eventModel': {
      'items': [{
        'item_name': prodName,
        'item_id': variantId,
        //'item_category': category,
        'item_brand': 'boAtlifestylein',
        'price': MRP,
        'item_variant': variantTitle,
        'quantity': 1
      }],
      'currency': "INR",
      'google_business_vertical': "retail",
      'value': salePrice
    }
  });
}
$("button[type=submit].product-item__quick-buy-button, button[type=submit].button.button--text.button--full.single-btn.hidden-touch").on("click", function (e) {
  var clickedElement = $(this);
  atcEvent(clickedElement);
});

$(".product-item_atc > .product-item__quick-form.flash, button.button.button--outline.button--text.button--full.hidden-touch.hidden-phone, .product-item__quick-buy-button").on("click", function (e) {
  var clickedElement = $(this);
  const prodName = clickedElement.parents('.product__wrapper').find("#productTitle").val();
  //const category = clickedElement.parents('.product__wrapper').find(".product-item-meta__title").data('product_type');
  let salePrice = clickedElement.parents('.product__wrapper').find("#productPrice").val()
  let MRP = clickedElement.parents('.product__wrapper').find("#productComparePrice").val();
  MRP = Number(MRP)/100;
  salePrice = Number(salePrice)/100;
  const variantTitle = clickedElement.parents('.product__wrapper').find("#variantTitle").val();
  const productId = clickedElement.parents('.product__wrapper').find("#variantId").val();

  //View Item for Engraving Product
  dataLayer.push({
    'event': 'view_item',
    'eventModel': {
      'items': [{
        'item_name': prodName,
        'item_id': productId,
        //'item_category': category,
        'item_brand': 'boAtlifestylein',
        'price': MRP,
        'item_variant': variantTitle,
        'quantity': 1
      }],
      'currency': "INR",
      'google_business_vertical': "retail",
      'value': salePrice
    }
  });
});

  $(document).on("click", ".custom-search-cta", function (e) {
  e.preventDefault();
  var t = $(this).parents("form").serialize();
  $.ajax({
    url: "/cart/add.js",
    dataType: "json",
    cache: !1,
    type: "post",
    data: t,
    success: function (e) {
      dispatch_cartUpdate(e);
      document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
        bubbles: !0
      })), document.getElementById("mini-cart").open = !0, document.querySelector("body").classList.add("noScroll"), $(".search-clear-icon").css('display', 'flex'), setTimeout(function () {
        Shopify.cart_item_count();
        cart_bubble();
      }, 1500)
    }
  })
});
function quickATC(e) {
  const prodName = $(e).parents('.product__wrapper').find(".product-item-meta__title").text();
  const category = $(e).parents('.product-item_atc ').find(".product-item-meta__title").data('product_type');
  let salePrice = $(e).parents('.product-item_atc ').find(".price--highlight").data('price');
  salePrice = Number(salePrice)/100;
  const MRP = $(e).parents('.product-item_atc ').find(".price--compare").data('compare-price');
  const variantTitle = $(e).parents('.product-item_atc ').find(".color-swatch__radio:checked").val();
  const rating = $(e).parents('.product-item_atc ').parents('product-item').find(".rating__stars").data('rating');
  const reviewCount = $(e).parents('.product-item_atc ').parents('product-item').find(".rating__caption").text();
  const imgURL = $(e).parents('.product-item_atc ').parents('product-item').find(".product-item__primary-image").attr('src');
  const productId = $(e).parent('product-payment-container').data('product-id');

  clevertap.event.push("Added to Cart", {
    "Product Name": prodName,
    "Variant Title": variantTitle,
    "Amount": salePrice,
    "MRP": MRP,
    "Quantity": 1,
    "Rating": rating,
    "Review Count": reviewCount,
    "Image url": imgURL,
    "source": 'Quick Drawer',
    "userSource": userSource
  });
  clevertap.profile.push({
    "Site": {
        "A2C Product Name": prodName,
        "A2C Variant Title": variantTitle,
        "A2C Amount": salePrice,
        "A2C MRP": MRP,
        "A2C Quantity": 1,
        "A2C Rating": rating,
        "A2C Review Count": reviewCount,
        "A2C Image url": imgURL
    }
  });

  //ATC datalayer event for quick ATC
  dataLayer.push({
    'event': 'add_to_cart',
    'eventModel': {
      'items': [{
        'item_name': prodName,
        'item_id': productId,
        'item_category': category,
        'item_brand': 'boAtlifestylein',
        'price': MRP,
        'item_variant': variantTitle,
        'quantity': 1
      }],
      'currency': "INR",
      'google_business_vertical': "retail",
      'value': salePrice,
    }
  });

  setTimeout(function () { $(".drawer--quick-buy").attr("open", !1), $(".header__cart").attr("aria-expanded", !0) }, 1200)
  clevertap.addMultiValuesForKey("Product_ids",[productId]);
}

function removeItem(e) {
  let productId = null;
  if($(e).hasClass('quantity-selector__button')) {
    if($(e).siblings('.quantity-selector__input').val() == '01') {
      productId = $(e).data('product-id');
    }
  } else {
    productId = $(e).data('product-id');
  }
  clevertap.removeMultiValuesForKey("Product_ids",[productId]);
}

// if (!isIOSMobile()) {
//   let i = Notification.permission;

//   function e() {
//       if ("visible" !== document.visibilityState) {
//           icon = "image-url";
//           var i = new Notification("Title", {
//               body: "Message to be displayed",
//               icon
//           });
//           i.onclick = () => {
//               i.close(), window.parent.focus()
//           }
//       }
//   }

//   function t() {
//     Notification.requestPermission(function(i) {
//       "granted" === i && (clevertap.profile.push({
//         Site: {
//           "Web Push": !0,
//           "MSG-push": !0
//         }
//       }), e(), console.log("granted"))
//     })
//   }
//   "granted" === i ? e() : t()
// };

// var actualDimension = $(window).width() + $(window).height();
// $(window).on('resize', function(){
//   if($(window).width() + $(window).height() < actualDimension) {
//     $('.fixed_nav.fixed_nav_mobile').css('position','relative')
//   } else {
//     $('.fixed_nav.fixed_nav_mobile').removeAttr('style')
//   }
// });

let unitsLeft = '';
let usual_price = '';

/**
 * Checks the availability of the engraved product and updates the UI accordingly.
 * @param {Object} e - The event object.
 */
function checkEngravedAvailability(e, value = null) {
  let nonengv_prod = $(".engrav:checked").val();
  let variant_personalization_id = $('.personilaztion-message-modal').attr('data-variant_personalization_id');

  // If variant_personalization_id exists and is not null
  if (variant_personalization_id && variant_personalization_id !== null) {
    variant_personalization_id = JSON.parse(variant_personalization_id);

    // Loop through each key in variant_personalization_id
    for (var key in variant_personalization_id) {
      // If the key matches the nonengv_prod
      if (key == nonengv_prod) {
        // If the product is available
        if (variant_personalization_id[key].available == 'true') {
          // If the event is not available, hide the skip-personalization, else show it
          if ((value && !value.available) || variant_personalization_id[key].available == "false") {
            $('.skip-personalization').hide()
            $('.click-buy-now').hide()
          } else {
            $('.skip-personalization').show()
            $('.click-buy-now').show()
          }
          // Show the prebook and customized buttons
          $('.personalised-modal-cta').removeClass('hide_cTA');
          $('.new-pdp .offer-callout-simple.personalised').removeClass('customized-hidden')
          // Hide the notifyMe trigger
          $('.product-item__quick-form #notifyMe_trigger').addClass('hide_cTA')
          // Show the custom_notifyMe_btn
          $('.product-item__quick-form.custom_notifyMe_btn, .new-drawer-buy .custom_notifyMe_btn, .popover__content .custom_notifyMe_btn').removeClass('show_notifyMe')
          // Show the personalised-offer
          $(".personalised-offer").toggleClass("customized-hidden", false);
          $(".personalised-offer").show();
        } else {
          // If the product is not available
          if (!value.available || variant_personalization_id[key].available == "false") {
            // Show the notifyMe trigger
            $('.product-item__quick-form #notifyMe_trigger').removeClass('hide_cTA')
            // Hide the custom_notifyMe_btn
            $('.product-item__quick-form.custom_notifyMe_btn, .new-drawer-buy .custom_notifyMe_btn, .popover__content .custom_notifyMe_btn').addClass('show_notifyMe')
          } else {
            // Hide the notifyMe trigger
            $('.product-item__quick-form #notifyMe_trigger').addClass('hide_cTA')
            // Show the custom_notifyMe_btn
            $('.product-item__quick-form.custom_notifyMe_btn, .new-drawer-buy .custom_notifyMe_btn, .popover__content .custom_notifyMe_btn').removeClass('show_notifyMe')
          }
          // Hide the prebook and customized buttons
          $('.personalised-modal-cta').addClass('hide_cTA');
          $('.new-pdp .offer-callout-simple.personalised').addClass('customized-hidden')
          // Hide the personalised-offer
          $(".personalised-offer").toggleClass("customized-hidden", true);
          $(".personalised-offer").hide();
        }
      }
    }
    // Call the personalizedText function
    Shopify.personalizedText(event, value);
  }
}

Shopify.variantChange = function (e, value) {
  let isVariantsComingSoon = JSON.parse(document.querySelector('.product-form__buy-buttons')?.dataset.isVariantsComingSoon);
  let notifyMeButton = document.querySelector('.pdp-inner  #notifyMe_trigger');
  // Product personalization
  // checkEngravedAvailability(e,value);
  let variant__price = value.price
  sessionStorage.setItem('variant_price', variant__price)
  var product_form = event.target;
  var pdp_product_form = document.querySelector('.new-pdp .shopify-product-form')
  let cta_btn_discount_1 = value.price * Shopify.cta_btn_discount_1 / 100;
  cta_btn_discount_1 = value.price - cta_btn_discount_1;
  let cta_btn_discount_2 = value.price * Shopify.cta_btn_discount_2 / 100;
  cta_btn_discount_2 = value.price - cta_btn_discount_2;
  let cta_btn_discount_3 = value.price * Shopify.cta_btn_discount_3 / 100;
  cta_btn_discount_3 = value.price - cta_btn_discount_3;
  if (product_form.querySelectorAll('.pdp-custom-payment-button').length > 0) {
    product_form.querySelectorAll('.pdp-custom-payment-button')[0].querySelector('.pdp-custom-cta-price') ? product_form.querySelectorAll('.pdp-custom-payment-button')[0].querySelector('.pdp-custom-cta-price').innerHTML = `${Shopify.formatMoney(cta_btn_discount_1, Shopify.money_format2)}<span>/item</span>` : '';
    product_form.querySelectorAll('.pdp-custom-payment-button')[1].querySelector('.pdp-custom-cta-price') ? product_form.querySelectorAll('.pdp-custom-payment-button')[1].querySelector('.pdp-custom-cta-price').innerHTML = `${Shopify.formatMoney(cta_btn_discount_2, Shopify.money_format2)}<span>/item</span>` : '';
    product_form.querySelectorAll('.pdp-custom-payment-button')[2].querySelector('.pdp-custom-cta-price') ? product_form.querySelectorAll('.pdp-custom-payment-button')[2].querySelector('.pdp-custom-cta-price').innerHTML = `${Shopify.formatMoney(cta_btn_discount_3, Shopify.money_format2)}<span>/item</span>` : '';
  } else if (document.querySelectorAll('.pdp-custom-payment-button').length > 0) {
    document.querySelectorAll('.pdp-custom-payment-button')[0].querySelector('.pdp-custom-cta-price') ? document.querySelectorAll('.pdp-custom-payment-button')[0].querySelector('.pdp-custom-cta-price').innerHTML = `${Shopify.formatMoney(cta_btn_discount_1, Shopify.money_format2)}<span>/item</span>` : '';
    document.querySelectorAll('.pdp-custom-payment-button')[1].querySelector('.pdp-custom-cta-price') ? document.querySelectorAll('.pdp-custom-payment-button')[1].querySelector('.pdp-custom-cta-price').innerHTML = `${Shopify.formatMoney(cta_btn_discount_2, Shopify.money_format2)}<span>/item</span>` : '';
  }

  /* helper fucntion to chech seleted option has custom-inventory */
  function getInventoryAttributes(optionValue) {
    // Find the matching input and check its data-inventory and data-inventory-limit attributes
    const matchingInput = [...document.querySelectorAll('.product-form__variants .color-swatch-list input')]
      .find(input => input.value === optionValue && input.getAttribute('data-inventory-limit'));
    
    // Find the matching input and check its data-discounted-price attribute
    const matchingInput2 = [...document.querySelectorAll('.product-form__variants .color-swatch-list input')]
      .find(input => input.value === optionValue && input.getAttribute('data-discounted-price'));

    if (matchingInput) {
      // Return an object with both attributes
      return {
        inventoryLimit: matchingInput.getAttribute('data-inventory-limit'),
        inventory: matchingInput.getAttribute('data-inventory'),
        freebieSku: matchingInput.getAttribute('data-cover-freebie-sku'),
        freebieId: matchingInput.getAttribute('data-cover-freebie-id'),
        masterSku: matchingInput.getAttribute('data-master-sku')
      };
    }

    if (matchingInput2) {
      const offerPrice = matchingInput2.getAttribute('data-discounted-price')
      $('.offer--price').text(offerPrice)
    }

    return null; // Return null if no matching input is found
  }

  const optionValue = value.title;
  const inventoryAttributes = getInventoryAttributes(optionValue);

  if (inventoryAttributes) {    
    let customInventoryLimit = parseInt(inventoryAttributes.inventoryLimit); 
    let variantActualInventory = parseInt(inventoryAttributes.inventory); 

    // Check if the variantActualInventory is less than customInventoryLimit
    if (variantActualInventory <= customInventoryLimit) {
      // Custom soldout logic here...
      productSoldOutLogic();
    } else {
      // product available logic here...
      productAvailableLogic();
    }
  } else if (!value.available) {
    // Normal sold-out logic...
    productSoldOutLogic();
  }else {
    // product available logic here...
    productAvailableLogic();
  }

  // product sold-out helper-function()
  function productSoldOutLogic() {
    // console.log(value.available, 'show notify me');
    // console.log(product_form)
    // $('.custom-notify-btn').show();
    $('.out_of_stock_msg').removeClass('out-of-stock-hide');

    if(isVariantsComingSoon[value.id]) {
      if(!notifyMeButton?.classList.contains('coming_soon_btn')) {
        notifyMeButton.classList.add('coming_soon_btn');
      }
    }
    else {
      if(notifyMeButton?.classList.contains('coming_soon_btn')) {
        notifyMeButton.classList.remove('coming_soon_btn');
      }
    }

    $('.pincode_checker_box').hide();
    $('.poition-relative').hide();
    $('.pdp_right_section .payment_offers').hide();
    $('.product__info button#AddToCart').hide();
    $('.marketplace-container').hide(); 
    $('.pdp-custom-payment-container').hide();
    $('.flash-product-mrp').css('margin-top', '0');
    //pdp correction grid correction on out stock product
    $(".price-list").addClass("grid-price");
    product_form.querySelector('#AddToCart') ? product_form.querySelector('#AddToCart').classList.add('hide_cTA') : '';
    // if(pdp_product_form) {
    //   pdp_product_form.querySelector('.cutomized-btn') ? product_form.querySelector('.cutomized-btn').classList.add('hide_cTA') : '';
    //   pdp_product_form.querySelector('.custom_notifyMe_btn') ? product_form.querySelector('.custom_notifyMe_btn').classList.add('show_notifyMe') : '';
    // }
    product_form.querySelector('.cutomized-btn') ? product_form.querySelector('.cutomized-btn').classList.add('hide_cTA') : '';
    product_form.querySelector('.buy-now-btn') ? product_form.querySelector('.buy-now-btn').classList.add('hide_cTA') : '';
    product_form.querySelector('.custom_notifyMe_btn') ? product_form.querySelector('.custom_notifyMe_btn').classList.add('show_notifyMe') : '';
    $('.button.custom-prebook, .personalised-offer.personalised, .banner_link.pdp-personalized').addClass('hide_cTA');
    $("#gokwik-buy-now").addClass('hide_cTA');
    product_form.querySelector('.pdp-custom-payment-container') ? product_form.querySelector('.pdp-custom-payment-container').classList.add('hide_cTA') : '';
    // $('quick-buy-drawer #AddToCart').hide();
    // $('quick-buy-popover #AddToCart').hide();
    $('.product-item__quick-form.quick-buy-notify-me #notifyMe_trigger').attr('data-variant-id', value.id);
    $('.d-lg-none.current-in-cart, .desktop.current-in-cart, .offer-callout-simple, .popup_wrapper, .rewards_payments').hide();
    $('.d-lg-none.restocking, .desktop.restocking').show();
    $('.pincode_checker_box').hide();
    if ($('#notifyMe_trigger.custom-notify-btn').length > 0) {
      $('#notifyMe_trigger.custom-notify-btn').attr('data-variant-id', value.id);
      var varient_url = $('#notifyMe_trigger.custom-notify-btn').attr('data-url');
      varient_url = varient_url.split('?')[0];
      varient_url = varient_url + "?variant=" + value.id;
      $('#notifyMe_trigger.custom-notify-btn').attr('data-url', varient_url);
    }
    setTimeout(() => {
      $('.flash-sale-lable').hide()
    }, 10)
  }

  // product availabe helper-function()
  function productAvailableLogic() {
    // todo: show low stock warning
    const currentStock = sessionStorage.getItem('CurrentStock');

    if(!$('.out_of_stock_msg').hasClass('out-of-stock-hide')) {
      $('.out_of_stock_msg').addClass('out-of-stock-hide');
    }

    if (currentStock > 1 && currentStock < 10) {
      setTimeout(() => {
          const tt = $(".custom-product-price-mobile [data-product-price-list]");
          
          if (tt.length > 0) {  // Ensure tt exists to avoid unnecessary operations
              // Check if the .inv element already exists to avoid duplicating
              let invElement = $('.inv');
              if (invElement.length === 0) {
                  const invDiv = `<div class="inv"><div class="anime-border"></div><div class="anime-border"></div><div class="anime-border"></div><div class="anime-border"></div><span>Don't Miss the boAt! Only <span id="inv-count">${currentStock}</span> Units Left!</span></div>`;
                  $(tt).append(invDiv);
                  invElement = $('.inv');
              } else {
                  // Update the existing inv element if it already exists
                  $('#inv-count').text(currentStock);
              }
              invElement.show();
          }
      }, 10);
    }
    
    // console.log(e.available, 'hide notify me');
    // $('.custom-notify-btn').hide();
    // $('.out_of_stock_msg').hide();
    $('.poition-relative').show();
    $('.pincode_checker_box').show();
    $('.product__info .product-form__add-button').show();
    $('.pdp_right_section .payment_offers').show();
    $('.marketplace-container').show();
    $('.pdp-custom-payment-container').show();
    $("#gokwik-buy-now").removeClass('hide_cTA');
    $('.cutomized-btn').text('Add to Cart');
    $('.buy-now-btn').text('Buy Now');
    //pdp correction grid correction on out stock product
    $(".price-list").removeClass("grid-price");
    product_form.querySelector('#AddToCart') ? product_form.querySelector('#AddToCart').classList.remove('hide_cTA') : '';
    product_form.querySelector('#gokwik-buy-now') ? product_form.querySelector('#gokwik-buy-now').classList.remove('hide_cTA') : '';
    // if(pdp_product_form) {
    //   pdp_product_form.querySelector('.cutomized-btn') ? product_form.querySelector('.cutomized-btn').classList.remove('hide_cTA') : '';
    //   pdp_product_form.querySelector('.custom_notifyMe_btn') ? product_form.querySelector('.custom_notifyMe_btn').classList.remove('show_notifyMe') : '';
    // }
    product_form.querySelector('.cutomized-btn') ? product_form.querySelector('.cutomized-btn').classList.remove('hide_cTA') : '';
    product_form.querySelector('.buy-now-btn') ? product_form.querySelector('.buy-now-btn').classList.remove('hide_cTA') : '';
    product_form.querySelector('.custom_notifyMe_btn') ? product_form.querySelector('.custom_notifyMe_btn').classList.remove('show_notifyMe') : '';
    $('.button.custom-prebook, .personalised-offer.personalised, .banner_link.pdp-personalized').removeClass('hide_cTA');
    product_form.querySelector('.pdp-custom-payment-container') ? product_form.querySelector('.pdp-custom-payment-container').classList.remove('hide_cTA') : '';
    // $('quick-buy-drawer #AddToCart').show();
    // $('quick-buy-popover #AddToCart').show();
    $('.d-lg-none.current-in-cart, .desktop.current-in-cart, .offer-callout-simple, .popup_wrapper, .rewards_payments').show();
    $('.d-lg-none.restocking, .desktop.restocking').hide();
    $('.pincode_checker_box').show();

    if (variant_personalization_id && variant_personalization_id !== null) {
      // variant_personalization_id = JSON.parse(variant_personalization_id);
      // Call the personalizedText function
      Shopify.personalizedText(event, value);
    }
  }

  $('.pdp-btn-price').remove();
  //let compare_price =  ( ${value.price / 100} *100 ) / ${value.compare_at_price / 100} ;

  let regular_price = value.compare_at_price / 100;
  let sale_price = value.price / 100;
  let discount_percentage;

  if (regular_price > sale_price) {
    discount_percentage = Math.round(((regular_price - sale_price) / regular_price) * 100) + '% Off';
  } else {
    discount_percentage = ''
  }
  // $("#AddToCart.a2c .loader-button__text, .cutomized-btn, #AddToCart.prebook .loader-button__text").html('');
  $(".price--inclusive-text").append(`
    <span class="pdp-btn-price d-lg-none">
      <span class="custom_price_wrapper">
        <span class="inclusive_text_content">Inclusive of all Taxes</span>
        <span class="mobile_atc_btn">
          <span class="mobile_atc_price">₹${value.price / 100}</span>
          <span class="btn_mrp">₹${regular_price}</span>
          <span class="saved_price">${discount_percentage}</span>
        </span>
      </span>
    </span>`);

  //   $(".cutomized-btn.preorder-customized").html(`
  // <span class="atc_btn">
  // <svg id="Group_211011" data-name="Group 211011" xmlns="http://www.w3.org/2000/svg" width="19.725" height="20" viewBox="0 0 19.725 23">
  //   <path id="Rectangle_760" data-name="Rectangle 760" d="M8.558,5.081a.8.8,0,1,0,1.6,0ZM0,5.081a.8.8,0,1,0,1.6,0ZM5.081,1.6A3.477,3.477,0,0,1,8.558,5.081h1.6A5.081,5.081,0,0,0,5.081,0Zm0-1.6A5.081,5.081,0,0,0,0,5.081H1.6A3.477,3.477,0,0,1,5.081,1.6Z" transform="translate(4.78)" fill="#fff"/>
  //   <path id="Rectangle_788" data-name="Rectangle 788" d="M.836,13.108l.8.1Zm18.053,0-.8.1h0ZM17.819,4.55l.8-.1h0Zm-15.913,0-.8-.1ZM6.152,1.6h7.421V0H6.152ZM17.023,4.65l1.07,8.558,1.592-.2-1.07-8.558Zm-2.38,12.466H5.082v1.6h9.561ZM1.632,13.208,2.7,4.65l-1.592-.2L.04,13.009Zm3.45,3.908a3.477,3.477,0,0,1-3.45-3.908l-1.592-.2A5.081,5.081,0,0,0,5.082,18.72Zm13.011-3.908a3.477,3.477,0,0,1-3.45,3.908v1.6a5.081,5.081,0,0,0,5.042-5.712ZM13.573,1.6a3.477,3.477,0,0,1,3.45,3.045l1.592-.2A5.081,5.081,0,0,0,13.573,0ZM6.152,0A5.081,5.081,0,0,0,1.11,4.451l1.592.2A3.477,3.477,0,0,1,6.152,1.6Z" transform="translate(0 4.28)" fill="#fff"/>
  // </svg>                    
  // <span class="add_to_cart_btn">Pre-book Now</span>
  // </span>
  // <span class="pdp-btn-price custom_price_wrapper">
  // <span class="inclusive_text_content">Inclusive of all Taxes</span>
  // <span class="mobile_atc_btn">
  //   <span class="mobile_atc_price">₹${value.price / 100}</span>
  //   <span class="saved_price">${discount_percentage}</span>
  // </span>
  // </span>`);

  //   $("#AddToCart.prebook .loader-button__text").append(`
  // <span class="atc_btn">
  // <span class="add_to_cart_btn">Pre-book Now</span>
  // </span>
  // <span class="pdp-btn-price custom_price_wrapper">
  // <span class="inclusive_text_content">Inclusive of all Taxes</span>
  // <span class="mobile_atc_btn">
  //   <span class="mobile_atc_price">₹${value.price / 100}</span>
  //   <span class="saved_price">${discount_percentage}</span>
  // </span>
  // </span>`);
    //  console.log(e);

  function swatches_change(varient_swatches_input) {
    for (let i = 0; i < varient_swatches_input.length; i++) {

      if (varient_swatches_input[i].checked) {
        $.ajax({
          url: location.pathname + "?variant=" + value.id + "&section_id=main-product",
          type: "GET",
          dataType: "html",
          success: function (e) {
            var product_media = $(e).find('product-media').html();
            $("product-media").html(product_media);

            //update the url
            window.history.replaceState({}, '', `${location.pathname}?variant=${value.id}`);
            setTimeout(function () {
              var product_itemsDiv = '.product_media_section .MultiCarousel-inner';
              var product_itemsMainDiv = ('.product_media_section .MultiCarousel');
              var product_selector = 'MultiCarousel_product';
              Shopify.product_slider(product_itemsDiv, product_itemsMainDiv, product_selector);
              if ($('.MultiCarousel_loaded.MultiCarousel-inner .product__media-item').length < 2) {
                $(product_itemsMainDiv).addClass('hide_dots');
              } else {
                $(product_itemsMainDiv).removeClass('hide_dots');
              }
              $('.product__media-image-wrapper img').click(function () {
                $('.product__zoom-button').click();
              });
              $('button.product__thumbnail-item.hidden-pocket').hover(function () {
                $(this).trigger('click');
              });

              //to set the tabindex for thumbnail
              // if($('.pdp-banner-image')) {
              //   let dataIndex = document.querySelector('.pdp-banner-image').closest('.product__media-item').getAttribute('data-index');
              //   document.querySelector('.pdp-banner-thumbnail').closest('.product__thumbnail-item').setAttribute('data-index',dataIndex);
              // }

            }, 500);

            //setting the img src and after variant change
            // if($('.pdp')) {
            //   document.querySelector('.pdp-banner-thumbnail img').setAttribute('src',localStorage.getItem('pdp-banner'));
            //   document.querySelector('.pdp-banner-image img').setAttribute('src',localStorage.getItem('pdp-banner'));
            //   document.querySelector('.pdp-banner-thumbnail img').removeAttribute('srcset');
            //   document.querySelector('.pdp-banner-image img').removeAttribute('srcset');
            // }
          }
        })
      }
    }
  }
  let varient_swatches_input = document.querySelectorAll('.variant-swatch input');
  swatches_change(varient_swatches_input);
  let color_swatches_input = document.querySelectorAll('.color-swatch input');
  swatches_change(color_swatches_input)

  let home_pod_price = document.querySelector('.custom-product-of-the-day-price .current_price');
  if (home_pod_price) {
    let custom_price = '';
    let offerVariantdata = sessionStorage.getItem('variantQtys');
    let OfferProperty = [];
    let varient_pod_units = [];
    offerVariantdata = JSON.parse(offerVariantdata);
    for (var key in offerVariantdata) {
      if (offerVariantdata.hasOwnProperty(value.id)) {
        let OfferPropertyArr = offerVariantdata[value.id];
        OfferProperty.push(OfferPropertyArr[0]['pod_deal_applicability']);
        varient_pod_units.push(OfferPropertyArr[0]['pod_units']);
        break;
      }
    }
    let varient_pod_unit = varient_pod_units[0];
    varient_pod_unit = parseInt(varient_pod_unit);
    OfferProperty = OfferProperty[0];
    if (varient_pod_unit > 0 && OfferProperty == 'true') {
      custom_price = parseInt(home_pod_price.dataset.pod)
    } else {
      custom_price = value.price / 100;
    }

    home_pod_price.innerHTML = '₹ ' + custom_price;
  }

  /* PDP product section update on variant change */
  if (window.location.href.includes('products')) {
    const selectedVariantId = value.id;
    window.updateVariantSection(selectedVariantId); 

    if (inventoryAttributes) {    
      let selectedOptionTitle = optionValue;
      let selectedVariant = value.id;
      let isCoverAvailable = false;
      let masterSku = parseInt(inventoryAttributes.masterSku); 
      let freebieSku = parseInt(inventoryAttributes.freebieSku); 
      let freebieId = parseInt(inventoryAttributes.freebieId);
      let covercaseMsgStrip = document.querySelector('.covercase-strip__wrapper');
      const coverCaseModal = document.querySelector('covercase-modal');

      if (!isNaN(freebieSku) && !isNaN(freebieId)) {  // Check if both are valid numbers
      let masterSku = parseInt(inventoryAttributes.masterSku); 
      window.toggleFreebieAtc(selectedOptionTitle, selectedVariant, true, true, freebieSku, freebieId, masterSku);  // if selected variant has freebie metafiled        
        //coverCaseModal.rerenderCoverCaseModal(value.id, isCoverAvailable = true); // this method is used to update the covercase modal 
      } else {
        window.toggleFreebieAtc(selectedOptionTitle, selectedVariant, false, true); // if selected variant has not freebie metafiled
        //coverCaseModal.rerenderCoverCaseModal(value.id, isCoverAvailable = false); // selected variant freebie not available then sending false
      }
    }
  }
}

/* This global fun() is used to update the update highlight section on variant level */
window.updateVariantSection = function(selectedVariantId) {
  const highlightSection = document.querySelector('#product-highlight__section');
  const quinnAfterSection = document.querySelector('.quinn-after__section');

  if (highlightSection && quinnAfterSection) {
    const sectionId = highlightSection.classList[1];
    const truncatedSectionId = sectionId.split('shopify-section--')[1];
    const productHandle = highlightSection.getAttribute('data-product-handle');
  
    const url = `${productHandle}?variant=${selectedVariantId}&section_id=${truncatedSectionId}`;
  
    fetch(url)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.text();  
      })
      .then(htmlString => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(htmlString, 'text/html');
        const fetchedHighlightSection = doc.querySelector('#product-highlight__section');
  
        if (fetchedHighlightSection && fetchedHighlightSection.innerHTML.trim() === '') {
          highlightSection.innerHTML = '';
  
          if (quinnAfterSection.classList.contains('d-none')) {
            quinnAfterSection.classList.remove('d-none')
          }
        } else {
          highlightSection.innerHTML = fetchedHighlightSection.innerHTML;
  
          if (!quinnAfterSection.classList.contains('d-none')) {
            quinnAfterSection.classList.add('d-none')
          }
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
  }
};

/* This global fun() is used to handle personalization custom qty on PLP */
/* This function is used to check engrave variant qty <= custom variant level qty. */ 
window.toggleProductItemBasedOnInventory = function(selectedVariantLabel, productItem, variantAvailable) {
  const noscriptElement = productItem.querySelector('#engrave-variants');

  if (noscriptElement) {
    const noscriptHTML = noscriptElement.innerHTML;
    const parser = new DOMParser();
    const parsedDocument = parser.parseFromString(noscriptHTML, 'text/html');
    const options = parsedDocument.querySelectorAll('option');

    options.forEach(option => {
      const engraveTitle = option.getAttribute('data-engrave-title');

      if (engraveTitle === selectedVariantLabel) {
        const dataEngravInventory = parseInt(option.getAttribute('data-inventory'));
        const dataCustomEngravInventory = parseInt(option.getAttribute('data-inventory-limit'));

        if (!isNaN(dataCustomEngravInventory)) {
          if (dataEngravInventory <= dataCustomEngravInventory) {
            const personalisedOfferMsg = productItem.querySelector('.personalised-offer');
            const customizedBtn = productItem.querySelector('.cutomized-btn');
            const addToCartBtn = productItem.querySelector('#AddToCart');

            if (personalisedOfferMsg) personalisedOfferMsg.classList.add('customized-hidden');
            if (customizedBtn) customizedBtn.classList.add('hide_cTA');

            if (variantAvailable === true) {
              if (addToCartBtn) addToCartBtn.classList.remove('customized-hidden');
            } else if (variantAvailable === false) {
              if (addToCartBtn) addToCartBtn.classList.add('customized-hidden');
            }
          } else {
            const personalisedOfferMsg = productItem.querySelector('.personalised-offer');
            const customizedBtn = productItem.querySelector('.cutomized-btn');
            const addToCartBtn = productItem.querySelector('#AddToCart');
            
            if (variantAvailable === true) {
              if (personalisedOfferMsg) personalisedOfferMsg.classList.remove('customized-hidden');
            }
            if (customizedBtn) customizedBtn.classList.remove('hide_cTA');
            if (addToCartBtn) addToCartBtn.classList.add('customized-hidden');
          }
        }
      }  
    });
  }
}

/* This global fun() is used to handle personalization custom qty on PDP */
/* This function is used to check engrave variant qty <= custom variant level qty. */ 
window.toggleElementsBasedOnInventory = function(selectedVariantLabel) {
  const noscriptElement = document.querySelector('#engrave-variants');

  if (noscriptElement) {
    const noscriptHTML = noscriptElement.innerHTML;
    const parser = new DOMParser();
    const parsedDocument = parser.parseFromString(noscriptHTML, 'text/html');
    const options = parsedDocument.querySelectorAll('option');

    options.forEach(option => {
      const engraveTitle = option.getAttribute('data-engrave-title');
      if (engraveTitle === selectedVariantLabel) {
        const dataEngravInventory = parseInt(option.getAttribute('data-inventory'));
        const dataCustomEngravInventory = parseInt(option.getAttribute('data-inventory-limit'));

        // Function to update classes
        function updateClasses(hide = false) {
          const personalisedModalCTA = document.querySelector('.personalised-modal-cta');
          const mobileHiddenPocket = document.querySelector('.product-meta .hidden-lap-and-up');
          const hiddenPocket = document.querySelector('.product-form__payment-container .hidden-pocket');
          const positionRelative = document.querySelector('.product-form__payment-container .poition-relative');
          const customizedBtn = document.querySelector('.product-form__payment-container .cutomized-btn');
          const buyNowBtn = document.querySelector('.product-form__payment-container .buy-now-btn');
          const addToCart = document.querySelector('.product-form__payment-container #AddToCart');
          const gokwikBuyNow = document.querySelector('.product-form__payment-container #gokwik-buy-now');

          if (personalisedModalCTA) personalisedModalCTA.classList.toggle('d-none', hide);
          if (mobileHiddenPocket) mobileHiddenPocket.classList.toggle('d-none', hide);
          if (hiddenPocket) hiddenPocket.classList.toggle('d-none', hide);
          if (positionRelative) {
            positionRelative.classList.toggle('mt-lg-0', !hide);
            positionRelative.classList.toggle('mt-lg-2', hide);
          }
          if (customizedBtn) customizedBtn.classList.toggle('hide_cTA', hide);
          if (buyNowBtn) buyNowBtn.classList.toggle('hide_cTA', hide);
          if (addToCart) addToCart.classList.toggle('customized-hidden', !hide);
          if (gokwikBuyNow) gokwikBuyNow.classList.toggle('customized-hidden', !hide);
        }

        if (!isNaN(dataCustomEngravInventory)) {
          if (dataEngravInventory <= dataCustomEngravInventory) {
            updateClasses(true); // Hide elements when inventory is less
          } else {
            updateClasses(false); // Show elements when inventory is greter
          }
        } else if (dataEngravInventory == 0) {
          // engrave is not avaialable
          updateClasses(true); 
        } else {
          // engrave is available
          updateClasses(false); 
        }
      }
    });
  }
};

window.isEngraveAvailableFlag = false;

/* This global fun() is used to handle freebee functionality {cover case} on PDP */
window.toggleFreebieAtc = function(selectedOptionTitle, selectedVariantId, freebieAvailability, onVariantChange, onChnageFreebieSku, onChnageFreebieId, onChnageMasterSku) {
  const selectedVariantLabel = selectedOptionTitle;
  const isEngraveAvailable = checkEngraveVariantAvailability(selectedVariantLabel);
  const inventoryAttributes = getInventoryAttributes(selectedVariantLabel);

  if (inventoryAttributes) {
    let freebiSku = inventoryAttributes.freebieSku;

    if (freebiSku && freebiSku !== 'null') {
      window.isEngraveAvailableFlag = isEngraveAvailable;
    } else if (window.isEngraveAvailableFlag == true) {
      window.isEngraveAvailableFlag = false
    }
  }

  if (selectedVariantId) {
    const customizeAtcBtn = document.querySelector('.product-form__payment-container .cutomized-btn');
    const customizeBuyNowBtn = document.querySelector('.product-form__payment-container .buy-now-btn');
    const addToCartBtn = document.querySelector('.product-form__payment-container #AddToCart');
    const buyNowBtn = document.querySelector('.product-form__payment-container #gokwik-buy-now');
    const customFreebieAtc = document.querySelector('.product-form__payment-container #freebie-add-to-cart');
    const customFreebieBuyNow = document.querySelector('.product-form__payment-container #freebie-buy-now');

    // on variant change custom buttton attr() needs to update
    if (onVariantChange === true) {
      let masterId = selectedVariantId;
      let masterSku = onChnageMasterSku;
      let freebieSku = onChnageFreebieSku;
      let freebieId = onChnageFreebieId;

      if (masterId) {
        customFreebieAtc.setAttribute('data-master-id', masterId);
        customFreebieAtc.setAttribute('data-master-sku', masterSku);
        customFreebieAtc.setAttribute('data-selected-freebee-sku', freebieSku);
        customFreebieAtc.setAttribute('data-selected-freebee-id', freebieId);
  
        customFreebieBuyNow.setAttribute('data-master-id', masterId);
        customFreebieBuyNow.setAttribute('data-master-sku', masterSku);
        customFreebieBuyNow.setAttribute('data-selected-freebee-sku', freebieSku);
        customFreebieBuyNow.setAttribute('data-selected-freebee-id', freebieId);
      }
    }
    
    // On freebie availablity [true/false] button needs to update
    if (freebieAvailability === true && !isEngraveAvailable) {
      if (customizeAtcBtn) { customizeAtcBtn.style.display = "none"; }
      if (customizeBuyNowBtn) { customizeBuyNowBtn.style.display = "none"; }
      if (addToCartBtn) { addToCartBtn.style.display = "none"; }
      if (buyNowBtn) { buyNowBtn.style.display = "none"; }
      
      if (customFreebieAtc) { 
        if (customFreebieAtc.classList.contains('hide_cTA')) {
          customFreebieAtc.classList.remove("hide_cTA");
        }
        customFreebieAtc.classList.add("show-button"); 
      }
      if (customFreebieBuyNow) { 
        if (customFreebieBuyNow.classList.contains('hide_cTA')) {
          customFreebieBuyNow.classList.remove("hide_cTA");
        }
        customFreebieBuyNow.classList.add("show-button"); 
      }

    } else if (freebieAvailability === false) {

      if (customizeAtcBtn) { customizeAtcBtn.removeAttribute("style"); }
      if (customizeBuyNowBtn) { customizeBuyNowBtn.removeAttribute("style"); }
      if (addToCartBtn) { addToCartBtn.removeAttribute("style"); }
      if (buyNowBtn) { buyNowBtn.removeAttribute("style"); }

      if (customFreebieAtc) {
        //customFreebieAtc.setAttribute('data-master-id', '');
        customFreebieAtc.setAttribute('data-selected-freebee-sku', '');
        customFreebieAtc.setAttribute('data-selected-freebee-id', '');

        if (customFreebieAtc.classList.contains('show-button')) { customFreebieAtc.classList.remove("show-button"); }
      }

      if (customFreebieBuyNow) {
        //customFreebieBuyNow.setAttribute('data-master-id', '');
        customFreebieBuyNow.setAttribute('data-selected-freebee-sku', '');
        customFreebieBuyNow.setAttribute('data-selected-freebee-id', '');

        if (customFreebieBuyNow.classList.contains('show-button')) { customFreebieBuyNow.classList.remove("show-button"); }
      }
    }
  } 
};

// Creating cleverTap push event
function createCleverTapEvent(event_name, event_data) {
  if (event_name != '' && event_data != '') {
    clevertap.event.push(event_name, event_data);
  }
}

// Creating cleverTap login event
function createCleverTapLoginEvent(event_name, event_data) {
  if (event_name != '' && event_data != '') {
    clevertap.onUserLogin.push(event_name, event_data);
  }
}

$('.view-similar').click(function() {
  const event = 'View Similar Clicked';
  const prodTit = $('.pdp_left_section h1.product-meta__title.heading.h3').text().trim()
  const event_info = { "userSource": userSource, "Product": prodTit  };
  createCleverTapEvent( event, event_info );
})

// Strip HTML tags from string
function stripHtml(html) {
  var tmp = document.createElement("DIV");
  tmp.innerHTML = html;
  return tmp.textContent || tmp.innerText || "";
}

/* clevertap code for login customer starts here */

$("#customer_login").submit(function () {
  var event = 'Login';
  var userEmail = document.getElementById("customer[email]").value;
  var event_info = { "Email": userEmail };
  var event_login = "Site";

  createCleverTapEvent(event, event_info);
  createCleverTapLoginEvent(event_login, event_info);
});

/* clevertap code for login customer ends here */

/* Clevertap code for announcement bar starts here */

$('.announce .announcement-bar__message p').each(function (ind, el) {
  $(el).on('click', function (e) {
    var announcementText = $(this).text();

    var event = 'Announcement bar clicked';
    var event_info = { "Message": announcementText, "userSource": userSource };

    createCleverTapEvent(event, event_info);
  });
});

/* Clevertap code for announcement bar ends here */


/* Clevertap code for Bootstrap carousel homepage starts here */

const slides = document.querySelectorAll('.bootstrap-carousel .item');
slides.forEach((slide, i) => {
  slide.addEventListener('click', function () {
    let imageTitle = slide.querySelector('.image_alt').innerText;
    let slideNum = `${i + 1}`

    var event = 'Homepage Banner clicked';
    var event_info = { "Banner Number": "Banner " + slideNum, "Banner Title": imageTitle, "userSource": userSource };

    createCleverTapEvent(event, event_info);
  })
});

/* Clevertap code for Bootstrap carousel homepage ends here */

/* Clevertap Code for "shop by category and top collections on colletion page" starts here  */
if (window.matchMedia("(min-width: 769px)").matches) {
  $('.shop_by_category_slider.only-desktop .single_column').each(function () {
    $(this).click(function () {
      var item = $(this).find('.collection_title span').text();
      var event = "Top Collections Clicked";
      var event_info = { "Item": stripHtml(item), "userSource": userSource };

      createCleverTapEvent(event, event_info);
    });
  });
} else {
  $('.shop_by_category_slider.only-mobile .single_column').each(function () {
    $(this).click(function () {
      var item = $(this).find('.collection_title span').text();
      var event = "Top Collections Clicked";
      var event_info = { "Item": stripHtml(item), "userSource": userSource };

      createCleverTapEvent(event, event_info);
    });
  });
}

/* Clevertap Code for "shop by category and top collections on colletion page" ends here  */

/* clevertap code for "image_carousel.liquid" section starts here */

var image_slides = document.querySelectorAll('.deal-slider .slide-url');
image_slides.forEach((slide, i) => {
  slide.addEventListener('click', function (e) {
    var imageurl = slide.href;
    var imageTitle = slide.querySelector('img').alt;
    var event = "image_carousel clicked";
    var event_info = { "image url": imageurl, "image Title": imageTitle, "userSource": userSource };
    createCleverTapEvent(event, event_info);
  })
});

/* clevertap code for "image_carousel.liquid" section ends here */

/* clevertap code for Explore now section on homepage starts here */

var explore_now_slider_img = document.querySelectorAll('.explore_now_slider .explore_item .explore_now_btn_link');
explore_now_slider_img.forEach((explore_now_slide, i) => {
  explore_now_slide.addEventListener('click', function (e) {
    var imageurl = explore_now_slide.href;
    var imageTitle = explore_now_slide.querySelector('img').alt;
    var event = "Explore now clicked";
    var event_info = { "image url": imageurl, "image Title": imageTitle, "userSource": userSource };
    createCleverTapEvent(event, event_info);
  })
});

/* clevertap code for Explore now section on homepage ends here */

/* Clevertap code starts for homepage-collection-banner.liquid */

let collection_slides = document.querySelectorAll('.collection-banners .carousel-inner .carousel-item');
collection_slides.forEach((slide, i) => {
  slide.addEventListener('click', function () {
    const slideNum = `${i + 1}`;
    let imageTitle = slide.querySelector('.collection-banners .image_alt').innerText;

    var event = "Deals Banner clicked";
    var event_info = { "Banner Number": 'Banner ' + slideNum, "Banner Title": imageTitle, "userSource": userSource };
    createCleverTapEvent(event, event_info);
  })
});

/* Clevertap code ends for homepage-collection-banner.liquid */

/* clevertap code for Featuerd blogs on homepage starts here */

$('.article-list').on('click', function () {
  var event = "Homepage Blog section clicked";
  var event_info = { "userSource": userSource };
  createCleverTapEvent(event, event_info);
});

/* clevertap code for Featuerd blogs on homepage ends here */

/* clevertap code for Press on homepage starts here */

$('.shopify-section shopify-section--press').on('click', function () {
  var event = "In the Press section clicked";
  var event_info = { "userSource": userSource };
  createCleverTapEvent(event, event_info);
});

/* clevertap code for Press on homepage ends here */

/* clevertap code for Bottom Navbar starts here */

$('.row-nav .fixed-nav-item').each(function () {
  $(this).click(function () {
    var event = "Bottom Navbar clicked";
    var item = $(this).find('.fixed_nav--link span').text()
    var event_info = { "item": item, "userSource": userSource };
    createCleverTapEvent(event, event_info);
  })

});

/* clevertap code for Bottom Navbar ends here */

/* clevertap code for login customer starts here */

$("#customer_login").submit(function () {
  var event = 'Login';
  var userEmail = document.getElementById("customer[email]").value;
  var event_info = { "Email": userEmail };
  var event_login = "Site";

  createCleverTapEvent(event, event_info);
  createCleverTapLoginEvent(event_login, event_info);
});

/* clevertap code for login customer ends here */

/* clevertap code for customer registeration starts here */

$("#register-customer").submit(function () {
  var firstName = document.getElementById("customer[first_name]").value;
  var lastName = document.getElementById("customer[last_name]").value;
  var userEmail = document.getElementById("customer[email]").value;
  var event_login = "Site";
  var event = 'Sign Up';
  var event_info = { "Email": userEmail, "First Name": firstName, "Last Name": lastName };

  createCleverTapLoginEvent(event_login, event_info);
  createCleverTapEvent(event, event_info);
});

/* clevertap code for customer registeration ends here */

/* clevertap code for clicking razor pay starts here */
$(".razorpay-checkout").click(function () {
  var mini_Cart_data = document.querySelector("#mini-cart-form");
  var productsincart = mini_Cart_data.dataset.cart_items;
  var event = 'razor/magic Button Clicked';
  var event_info = { "cart products": productsincart, "Amount": cart_total_price };

  createCleverTapEvent(event, event_info);
});

/* clevertap code for product-banners on pdp*/

$('a.banner_link').on('click', function () {
  let product_b_title = $(this).data('title');
  var event = `product page banner clicked`;
  var event_info = { "userSource": userSource, "product_title": product_b_title };
  createCleverTapEvent(event, event_info);
});

/* clevertap code for clicking razor pay ends here */

// * clevertap code for WhatsApp icon starts here
$('.whatsapp').click(function () {
  var event = `WhatsApp Chat icon clicked`;
  var event_info = { "userSource": userSource, };
  createCleverTapEvent(event, event_info);
})
// * clevertap code for WhatsApp icon starts here

// # info: Collection Filters Code
Shopify.accordion = function (tablinks) {
  for (i = 0; i < tablinks.length; i++) {
    if (tablinks[i].hasAttribute("open")) {
      tablinks[i].removeAttribute("open");
      tablinks[i].previousElementSibling.setAttribute('aria-expanded', 'false');
    }
  }
}

function preserveQuery() {
  Shopify.queryParams = {};
  if (window.location.search.length) {
    const params = window
      .location
      .search
      .substr(1)
      .split('&');
    const filterParams = params.filter(checkPrice);
    const fliterUrl = params.filter(priceNotInclude);

    function checkPrice(param) {
      return param.includes('filter.v.price');
    }

    function priceNotInclude(param) {
      return !param.includes('filter.v.price');
    }

    let fliterBaseUrl = fliterUrl.toString();
    fliterBaseUrl = fliterBaseUrl.replaceAll(',', '&')
    Shopify.fliterUrl = fliterBaseUrl;
    for (let i = 0; i < filterParams.length; i++) {
      const keyValue = filterParams[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

}

function triggerEvent(element, name, data = {}) {
  element.dispatchEvent(new CustomEvent(name, {
    bubbles: true,
    detail: data
  }));
}

Shopify.collectionFilter = function (filterLoad) {

  let details = document.querySelectorAll("#facet-filters-form collapsible-content");
  let summary = $('#facet-filters-form .collapsible-toggle');

  summary.click(function () {
    Shopify.accordion(details);
    $(this).attr('aria-expanded', 'true');
    $(this).siblings('collapsible-content').attr('open', 'true');
  });

  preserveQuery();

  let sortItems = document.querySelectorAll('.price-tag-filter .tag');
  for (let i = 0; i < sortItems.length; i++) {
    sortItems[i].addEventListener('click', function (e) {
      preserveQuery();
      Shopify.queryParams['filter.v.price.gte'] = e.target.attributes['data-min'].value;
      Shopify.queryParams['filter.v.price.lte'] = e.target.attributes['data-max'].value;
      let searchParams = new URLSearchParams(Shopify.queryParams).toString();
      if (Shopify.fliterUrl) {
        searchParams = `${Shopify.fliterUrl}&${searchParams}`
      }
      triggerEvent(this, "facet:criteria-changed", {
        url: `${window.location.pathname}?${searchParams}`
      });

    })
  }
  if (filterLoad) {
    Shopify.accordion(details);
    if (summary[0] != undefined) {
      summary[0].setAttribute('aria-expanded', 'true');
      summary[0].nextElementSibling.setAttribute('open', 'true');
    }
  }
}

let collectionFilterLoad = true;
Shopify.collectionFilter(collectionFilterLoad);

// OTP Login

const date = new Date()
options = {
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "numeric",
  hour12: true
};
const LOGIN_TIMESTAMP = new Intl.DateTimeFormat("en-GB", options).format(date);
Shopify.custom_otp_login = function () {
  //Function to allow only numbers
  function _isNumberCheck(evt) {
    var charCode = (evt.which) ? evt.which : event.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
      return false;
    return true;
  }
  // Not allow 0 as first digit on input
  $(document).on("input", "#otp-mobile-number, #otp", (e) => {
    $(e.target).val($(e.target).val().replace(/^[^1-9][^0-9]*$/, ''));
    $('.otp-login-error').html('');
    if ($('#otp-mobile-number').val().length > 9) {
      $('.otp-login-btn').addClass('active');
    } else ($('.otp-login-btn').removeClass('active'));
    if ($('#otp').val().length > 5) {
      $('.otp-login-confirm-btn').addClass('active');
      $('.otp-login-confirm-btn').on("click", function () {
        otpConfirm();
      })
    } else ($('.otp-login-confirm-btn').removeClass('active'));
  })

  $(document).on("keypress", "#otp-mobile-number, #otp", (e) => {
    return _isNumberCheck(e);
  })
  let timerOn = false;
  function timer(remaining, timerOn) {
    let m = Math.floor(remaining / 60);
    let s = remaining % 60;

    m = m < 10 ? '0' + m : m;
    s = s < 10 ? '0' + s : s;
    $('#timer').html(m + ':' + s);
    remaining -= 1;
    if (remaining >= 0 && timerOn) {
      setTimeout(function () {
        timerOn = sessionStorage.getItem('timerOn');
        timerOn = JSON.parse(timerOn);
        timer(remaining, timerOn);
      }, 1000);
      return;
    }

    if (!timerOn) {
      // Do validate stuff here
      return;
    }

    // Do timeout stuff here
    $('.resend-timer').hide();
    $('.resend-text').show();
    $('.otp-timer-container').hide();
    // $('.resend-btn').show();
    $('.resend-otp-container').css("display", "flex");
    $('.otp-login-confirm-btn').hide();
    $('.otp-login-confirm-btn').removeClass('active');
  }

  function TimerFunction() {
    timerOn = true;
    sessionStorage.setItem('timerOn', timerOn);
    $('.resend-timer').show();
    $('.resend-text').hide();
    // $('.resend-btn').hide();
    $('.resend-otp-container').hide();
    $('.otp-timer-container').show();
    $('.otp-login-confirm-btn').show();
    $('.otp-login-body-container').removeClass('login_error');
    $('#otp').val('');
    timer(600, timerOn);
  }

  function countdown(timeleft, url) {
    var timeleft = timeleft;
    var downloadTimer = setInterval(function () {
      if (timeleft <= 0) {
        clearInterval(downloadTimer);
        sessionStorage.setItem('login', 'false');
        location.href = url;
      } else {
        if (document.getElementById("countdown") != null) {
          document.getElementById("countdown").innerHTML = timeleft;
        }
      }
      timeleft -= 1;
    }, 1000);
  }

  function emailMask(email) {
    var maskedEmail = email.replace(/([^@\.])/g, "*").split('');
    var previous = "";
    for (i = 0; i < maskedEmail.length; i++) {
      if (i <= 1 || previous == "." || previous == "@") {
        maskedEmail[i] = email[i];
      }
      previous = email[i];
    }
    return maskedEmail.join('');
  }

  var customer_container = document.querySelector('.customer-login-section.customer--section');
  function inputSubmit(input) {
    if (input) {
      input.addEventListener("keypress", function (event) {
        if (event.key === "Enter") {
          event.preventDefault();
          if (customer_container.hasAttribute('otp_login_screen')) {
            document.querySelector('.otp-login-btn').click();
          }
          else if (customer_container.hasAttribute('otp_send')) {
            document.querySelector('.otp-login-confirm-btn').click();
          }
          else {
            event.preventDefault();
          }
        }
      });
    }
  }

  function signup_window(session_id) {
    $('.customer-login-section').attr('new_customer', 'true');
    $('.mobile-login-otp_heading h2').html('<b>Continue with Email ID</b>');
    $('.mobile-login-otp_heading span').html('Please enter your Name & Email ID to continue');
    $('.customer-login-section').removeAttr('multi_email');
    $('.otp-login-message h3').html('Continue with Email');
    $('.otp-timer-container').hide();
    $('.otp-login-error').html('');
    $('.otp-login-submit-btn').click(function () {
      let full_name = $('.otp-fullName #full_name').val();
      let email = $('.otp-email #email').val();
      let phone = $('#otp-mobile-number').val();
      let register_url = sessionStorage.getItem('login_location');
      sessionStorage.setItem('selected_email', email);
      otpSignUp(full_name, email, phone, session_id, register_url);
    })
  }

  function verifyemail(session_id, otp, url) {
    let base_Url = 'https://otp.boat-lifestyle.com/email/verify';
    var settings = {
      "url": base_Url,
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        "session_id": session_id,
        "url": url,
        "otp": otp
      }),
    };

    $.ajax(settings).done(function (response) {
      // console.log(response);
      if (response.code == 200 && response.message == 'login URL sent') {
        $('.customer-login-section.customer--section').hide();
        var notifyMeSuccessContainer = $('.notifyMe_popup__main_container .oto-login-success-container');
        if (notifyMeSuccessContainer.length > 0) {
          notifyMeSuccessContainer.html(`
          <div class="notifyMe_sucess_heading"><h2>We will inform you once the Product is back in stock!</h2><p>Meanwhile checkout our <b>other collections</b>.</p></div><div class="notifyMe_sucess_content"></div><div class="notifyMe_sucess_button"><button class="button button--secondary button--full" onclick="location.reload()">Continue</button></div>`);
        }
        $('.oto-login-success-container').show();
        localStorage.setItem('boatHead_input', response.Token);
        countdown(3, response.URL);
        $('.otp-login-body-container').removeClass('login_error');
      } else if (response.code == 422 && response.message == 'validation_error') {
        $('.otp-login-error').html('Something went wrong please try again.');
        $('.otp-login-body-container').addClass('login_error');
      } else if (response.code == 401 || response.code == 429) {
        $('.otp-login-error').html(response.message);
        $('.otp-login-body-container').addClass('login_error');
      } else if (response.code == 406) {
        $('.otp-login-error').html('Otp expired.');
        $('.otp-login-body-container').addClass('login_error');
      } else {
        $('.otp-login-error').html('Something went wrong please try again.');
        $('.otp-login-body-container').addClass('login_error');
      }
    });
  }

  function emailResend(email, session_id) {
    let base_Url = 'https://otp.boat-lifestyle.com/email/otp';
    var settings = {
      "url": base_Url,
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        "email": email,
        "session_id": session_id
      }),
    };

    $.ajax(settings).done(function (response) {
      // console.log(response);
      if (response.code == 200) {

      } else if (response.code == 429) {
        $('.otp-login-error').html(response.message);
      } else {
        $('.otp-login-error').html('Something went wrong please try again.');
      }
    });
  }

  function selectEmail(email, session_id, url) {
    let base_Url = 'https://otp.boat-lifestyle.com/emails/select';
    var settings = {
      "url": base_Url,
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        "session_id": session_id,
        "email": email,
        "url": url
      }),
    };
    $.ajax(settings).done(function (response) {
      // console.log(response);
      if (response.code == 200) {
        $('.otp-login-error').html('');
        if (response.message == 'Email exists with different number  , OTP sent to email') {
          var session_id = response.session_id;

          // email varify code
          $('.customer-login-section').attr('otp_send', 'true');
          $('.customer-login-section').attr('otp_email_varify', 'true');
          $('.customer-login-section').removeAttr('multi_email');
          $('#resend__otp').removeClass('login-resend-btn');
          $('#resend__otp').addClass('email-resend-btn');
          $('.email-list-container').html('');
          $('.mobile-otp-inout input').val('');
          $('.otp-timer-container').show();
          $('.mobile-login-input').html(`
            <div class="input">
              <input type="textl" id="emailId" name="emailId" value="${sessionStorage.getItem('selected_email')}" class="input__field is-filled" required="" disabled="disabled">
              <label for="mobile" class="input__label">Enter your email</label>
            </div>
            `);
          $('.otp-login-error').html('');
          $('.otp-login-confirm-btn').addClass('email_varify');
          TimerFunction();
          sessionStorage.setItem('login_session_id', response.session_id);

        } else {
          $('.customer-login-section.customer--section').hide();
          var notifyMeSuccessContainer = $('.notifyMe_popup__main_container .oto-login-success-container');
          if (notifyMeSuccessContainer.length > 0) {
            notifyMeSuccessContainer.html(`
            <div class="notifyMe_sucess_heading"><h2>We will inform you once the Product is back in stock!</h2><p>Meanwhile checkout our <b>other collections</b>.</p></div><div class="notifyMe_sucess_content"></div><div class="notifyMe_sucess_button"><button class="button button--secondary button--full" onclick="location.reload()">Continue</button></div>`);
          }
          $('.oto-login-success-container').show();
          localStorage.setItem('boatHead_input', response.Token);
          countdown(3, response.URL);
        }
      } else if (response.code == 422 && response.message == 'validation_error') {
        // $('.otp-login-error').html('Something went wrong please try again.');
      } else if (response.code == 401 || response.code == 404 || response.code == 429) {
        $('.otp-login-error').html(response.message);
      }
    });
  }

  function otpSignUp(full_name, email, phone, session_id, url) {
    let base_Url = 'https://otp.boat-lifestyle.com/signup';
    var settings = {
      "url": base_Url,
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        "full_name": full_name,
        "email": email,
        "phone": phone,
        "session_id": session_id,
        "url": url
      }),
    };
    $.ajax(settings).done(function (response) {
      // console.log(response);
      if (response.code == 200) {
        $('.otp-login-error').html('');
        if (response.message == 'Email exists with different number  , OTP sent to email') {
          var session_id = response.session_id;

          // email varify code

          $('.customer-login-section').attr('otp_send', 'true');
          $('.customer-login-section').attr('otp_email_varify', 'true');
          $('.customer-login-section').removeAttr('new_customer');
          $('.customer-login-section').removeAttr('multi_email');
          $('#resend__otp').removeClass('login-resend-btn');
          $('#resend__otp').addClass('email-resend-btn');
          $('.email-list-container').html('');
          $('.mobile-otp-inout input').val('');
          $('.otp-timer-container').show();
          $('.mobile-login-input').html(`
            <div class="input">
              <input type="textl" id="emailId" name="emailId" value="${sessionStorage.getItem('selected_email')}" class="input__field is-filled" required="" disabled="disabled">
              <label for="mobile" class="input__label">Enter your email</label>
            </div>
            `);
          $('.otp-login-error').html('');
          $('.otp-login-confirm-btn').addClass('email_varify');
          clevertap.event.push('OTP Signup', {
            "Full Name": full_name,
            "Email": email,
            "Phone": phone,
            "Message": response.message
          })
          clevertap.profile.push({
            "Site": {
              "OTP Signup Name": full_name,
              "OTP Signuo Number": phone,
              "OTP Signup Email": email,
              "MSG-sms": "TRUE",
              "MSG-whatsapp": "TRUE"
            }
          });
          TimerFunction();
          sessionStorage.setItem('login_session_id', response.session_id);
        } else {
          $('.customer-login-section.customer--section').hide();
          var notifyMeSuccessContainer = $('.notifyMe_popup__main_container .oto-login-success-container');
          if (notifyMeSuccessContainer.length > 0) {
            notifyMeSuccessContainer.html(`
            <div class="notifyMe_sucess_heading"><h2>We will inform you once the Product is back in stock!</h2><p>Meanwhile checkout our <b>other collections</b>.</p></div><div class="notifyMe_sucess_content"></div><div class="notifyMe_sucess_button"><button class="button button--secondary button--full" onclick="location.reload()">Continue</button></div>`);
          }
          $('.oto-login-success-container').show();
          localStorage.setItem('boatHead_input', response.Token);
          clevertap.event.push('OTP Signup', {
            "Full Name": full_name,
            "Email": email,
            "Phone": phone,
            "Message": response.message
          })
          clevertap.profile.push({
            "Site": {
              "OTP Signup Name": full_name,
              "OTP Signuo Number": phone,
              "OTP Signup Email": email,
              "MSG-sms": "TRUE",
              "MSG-whatsapp": "TRUE"
            }
          });
          countdown(3, response.URL);
        }
      } else if (response.code == 422 && response.message == 'validation_error') {
        $('.otp-login-error').html('Something went wrong please try again.');
        clevertap.event.push('OTP Signup', {
          "Full Name": full_name,
          "Email": email,
          "Phone": phone,
          "Message": response.message
        })
        clevertap.profile.push({
          "Site": {
            "OTP Signup Name": full_name,
            "OTP Signuo Number": phone,
            "OTP Signup Email": email,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE"
          }
        });
      } else if (response.code == 401) {
        $('.otp-login-error').html('Customer already exist with this email ID and with ' + response.message + ' phone number login with this number.');
        let login_btn = $('.otp-login-submit-btn');
        login_btn.html('Back to Login');
        login_btn.attr('return_to_login', true);
        clevertap.event.push('OTP Signup', {
          "Full Name": full_name,
          "Email": email,
          "Phone": phone,
          "Message": response.message
        })
        clevertap.profile.push({
          "Site": {
            "OTP Signup Name": full_name,
            "OTP Signuo Number": phone,
            "OTP Signup Email": email,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE"
          }
        });
        $('.otp-login-submit-btn[return_to_login]').click(function (e) {
          e.preventDefault();
          location.reload();
        })
      } else if (response.code == 429) {
        $('.otp-login-error').html(response.message);
      } else {
        $('.otp-login-error').html('Something went wrong please try again.');
      }
    });
  }

  function verifyotp(session_id, otp, url) {
    let base_Url = 'https://otp.boat-lifestyle.com/login/verifyotp';
    var settings = {
      "url": base_Url,
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        "session_id": session_id,
        "otp": otp,
        "url": url
      }),
    };

    $.ajax(settings).done(function (response) {
      let mobile_number = $('.mobile-login-input input').val()
      if (response.code == 200 && response.message == 'login URL sent') {
        sessionStorage.setItem('timerOn', false);
        $('.customer-login-section.customer--section').hide();
        var notifyMeSuccessContainer = $('.notifyMe_popup__main_container .oto-login-success-container');
        if (notifyMeSuccessContainer.length > 0) {
          notifyMeSuccessContainer.html(`
          <div class="notifyMe_sucess_heading"><h2>We will inform you once the Product is back in stock!</h2><p>Meanwhile checkout our <b>other collections</b>.</p></div><div class="notifyMe_sucess_content"></div><div class="notifyMe_sucess_button"><button class="button button--secondary button--full" onclick="location.reload()">Continue</button></div>`);
        }
        $('.oto-login-success-container').show();
        $('.otp-login-body-container').removeClass('login_error');
        localStorage.setItem('boatHead_input', response.Token);
        clevertap.event.push('Successful Login', {
          "Mobile Number": mobile_number,
          "Session ID": session_id,
          "Login Timestamp": LOGIN_TIMESTAMP
        })
        clevertap.profile.push({
          "Site": {
            "OTP Login Number": mobile_number,
            "Login Timestamp": LOGIN_TIMESTAMP,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE",
            "Login Timestamp": LOGIN_TIMESTAMP
          }
        });
        countdown(3, response.URL);

      } else if (response.code == 422 && response.message == 'validation_error') {
        $('.otp-login-error').html('Something went wrong please try again.');
        $('.otp-login-body-container').addClass('login_error');
        clevertap.event.push('Failed Login', {
          "Mobile Number": mobile_number,
          "Error Message": 'Something went wrong please try again.'
        })
        clevertap.profile.push({
          "Site": {
            "OTP Failed Mobile Number": mobile_number,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE"
          }
        });
      } else if (response.code == 401 && response.message == 'Incorrect Otp') {
        $('.otp-login-error').html('Incorrect OTP');
        $('.otp-login-body-container').addClass('login_error');
        clevertap.event.push('Failed Login', {
          "Mobile Number": mobile_number,
          "Error Message": response.message
        })
        clevertap.profile.push({
          "Site": {
            "OTP Failed Mobile Number": mobile_number,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE"
          }
        });
      } else if (response.code == 401 && response.message == 'Customer has not registered email , redirecting to Sign up' || response.code == 401 && response.message == 'Customer does not exists , consider Sign up') {
        sessionStorage.setItem('timerOn', false);
        $('.otp-login-error').html(response.message);
        $('.otp-login-body-container').addClass('login_error');
        clevertap.event.push('Failed Login', {
          "Mobile Number": mobile_number,
          "Error Message": response.message
        })
        clevertap.profile.push({
          "Site": {
            "OTP Failed Mobile Number": mobile_number,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE"
          }
        });
        signup_window(session_id);
      } else if (response.code == 406) {
        $('.otp-login-error').html('OTP expired.');
        $('.otp-login-body-container').addClass('login_error');
        clevertap.event.push('Failed Login', {
          "Mobile Number": mobile_number,
          "Error Message": response.message
        })
        clevertap.profile.push({
          "Site": {
            "OTP Failed Mobile Number": mobile_number,
            "MSG-sms": "TRUE",
            "MSG-whatsapp": "TRUE"
          }
        });
      } else if (response.code == 300 && response.message == 'emailId list') {
        sessionStorage.setItem('timerOn', false);
        $('.otp-login-message h3').html('Please select your Primary email id');
        $('.customer-login-section').attr('multi_email', 'true');
        $('.otp-timer-container').hide();
        $('.otp-login-error').html('');
        let emailList = response.emailList;
        let emailListHtml = '', i;
        let emailListContainer = document.querySelector('.email-list-container');
        if (emailList.length > 0) {
          $('.mobile-login-otp_heading h2').html('<b>Select your primary Email ID</b>');
          $('.mobile-login-otp_heading span').html('Please select one of the below to continue');
          for (let i = 0; i < emailList.length; i++) {
            emailListHtml = emailListHtml + '<span data-value="' + emailList[i] + '">' + emailList[i] + '</span>'
          }
          emailListContainer.innerHTML = emailListHtml + '<span class="redirect_to_signup">Continue with Email</span>';
          let emailSelector = $('.email-list-container span');
          let selectedEmail = '';
          // console.dir(emailSelector[0]);
          selectedEmail = emailSelector[0].dataset.value;
          sessionStorage.setItem('selected_email', selectedEmail);
          emailSelector[0].setAttribute('selected', 'true');
          emailSelector.click(function (event) {
            selectedEmail = event.target.dataset.value;
            for (i = 0; i < emailSelector.length; i++) {
              if (emailSelector[i].hasAttribute("selected")) {
                emailSelector[i].removeAttribute("selected");
              }
            }
            sessionStorage.setItem('selected_email', selectedEmail);
            $(this).attr('selected', 'true');
          });

          $('.redirect_to_signup').click(function () {
            signup_window(session_id);
          });
          let selectedEmail_url = sessionStorage.getItem('login_location');
          $('.customer-login-section[multi_email] .otp-login-submit-btn').click(function () {
            selectEmail(selectedEmail, session_id, selectedEmail_url);
          });
        } else {
          signup_window(session_id);
        }
      } else if (response.code == 429) {
        $('.otp-login-error').html(response.message);
        $('.otp-login-body-container').addClass('login_error');
      } else {
        $('.otp-login-error').html('Something went wrong please try again.');
        $('.otp-login-body-container').addClass('login_error');
        clevertap.event.push('Failed Login', {
          "Error Message": 'Something went wrong please try again.'
        })
      }
    });
  }

  function otpLogin(phone) {
    let base_Url = 'https://otp.boat-lifestyle.com/login/sendotp';
    var settings = {
      "url": base_Url,
      "method": "POST",
      "timeout": 0,
      "headers": {
        "Content-Type": "application/json"
      },
      "data": JSON.stringify({
        "phone": phone
      }),
    };
    $.ajax(settings).done(function (response) {
      if (response.code == 200 && response.message == 'OTP sent') {
        $('.customer-login-section').attr('otp_send', 'true');
        $('.mobile-login-number span').html($('#otp-mobile-number').val());
        $('.customer-login-section').removeAttr('otp_login_screen');
        $('#otp-mobile-number').attr('disabled', true)
        $('.otp-login-error').html('');
        TimerFunction();
        sessionStorage.setItem('login_session_id', response.session_id)
      } else if (response.code == 422 && response.message == 'validation_error') {
        $('.otp-login-error').html('The phone field is required.');
      } else if (response.code == 403) {
        $('.otp-login-error').html(response.message);
      } else if (response.code == 429) {
        $('.otp-login-error').html(response.message);
      }
    });
  }

  $('.otp-login-btn, .login-resend-btn').click(function () {
    if (!$('#resend__otp').hasClass('email-resend-btn')) {
      var phone = $('#otp-mobile-number').val();
      if (phone.length < 1) {
        $('.otp-login-error').html('The phone field is required.');
      } else if (phone.length < 10) {
        $('.otp-login-error').html('Invalid phone number.');
      } else {
        $('.otp-login-btn').attr('disabled', true);
        otpLogin(phone);
      }
    }
  })

  $(document).on('click', '#resend__otp', function () {
    TimerFunction();
  });

  $('.mobile-login-edit-icon').click(function () {
    $('.otp-login-error').html('');
    $('.otp-login-btn').attr('disabled', false);
    $('.customer--section').removeAttr('otp_send');
    $('.mobile-otp-inout input').val('');
    $('#otp-mobile-number').attr('disabled', false)
  });
  if (!sessionStorage.login_location && sessionStorage.login_location !== '') {
    sessionStorage.setItem('login_location', window.location.href);
  }


  document.querySelector('.custom-account-icon')?.addEventListener("click", function myFunction(event) {
    event.preventDefault();
    sessionStorage.setItem('login_location', window.location.href);
  });

  let mobile_account = document.querySelectorAll('.mobile-custom-account-icon');
  for (let i = 0; i < mobile_account.length; i++) {
    mobile_account[i].addEventListener("click", function myFunction(event) {
      event.preventDefault();
      sessionStorage.setItem('login_location', window.location.href);
      if (document.querySelectorAll('.login-popup-trigger').length == 0) {
        var account_url = this.firstElementChild.getAttribute('href');
        window.location = account_url;
      }
    });
  }

  function otpConfirm() {
    if (!$('.otp-login-confirm-btn').hasClass('email_varify')) {
      let session_id = sessionStorage.getItem('login_session_id');
      var compiledOtp = document.getElementById('otp').value;
      let url = sessionStorage.getItem('login_location');
      if (session_id && session_id !== '' && session_id !== 'undefined' && url && compiledOtp !== '') {
        verifyotp(session_id, compiledOtp, url);
      }
    } else {
      let session_id = sessionStorage.getItem('login_session_id');
      let mobile_number = $('.mobile-login-input input').val()
      let otp = document.getElementById('otp').value;
      let url = sessionStorage.getItem('login_location');
      if (session_id && session_id !== '' && session_id !== 'undefined' && url && otp !== '') {
        verifyemail(session_id, otp, url);
      } else if (otp == '') {
        $('.otp-login-error').html('OTP is required');
      }
    }
  }

  $('#resend__otp').click(function () {
    if ($(this).hasClass('email-resend-btn')) {
      let session_id = sessionStorage.getItem('login_session_id');
      let email = $('#emailId').val();
      if (session_id && session_id !== '' && session_id !== 'undefined' && email) {
        emailResend(email, session_id);
      }
    }
  })

  var input_login = document.querySelector('.mobile-login-input input');
  inputSubmit(input_login);
  var otp_login = document.querySelector('.mobile-otp-inout input');
  inputSubmit(otp_login);

  $('.mobile-otp-inout').click(function () {
    if ($('.otp-login-error').html() !== '') {
      $('.otp-login-error').html('');
      $(this).children('input').val('');
    }
  });

};


$(document).on("click", ".custom-offer-add-to-cart", function (e) {
  e.preventDefault();
  let offerForm = $(this).parents("form")[0];
  let offerId = offerForm.querySelector('[name="id"]').value;
  let offerVariantData = sessionStorage.getItem('variantQtys');
  let OfferProperty = [];
  let varient_pod_units = [];
  let podData = {};
  offerVariantData = JSON.parse(offerVariantData);
  for (var key in offerVariantData) {
    if (offerVariantData.hasOwnProperty(offerId)) {
      let OfferPropertyArr = offerVariantData[offerId];
      OfferProperty.push(OfferPropertyArr[0]['pod_deal_applicability']);
      varient_pod_units.push(OfferPropertyArr[0]['pod_units']);
      break;
    }
  }
  let varient_pod_unit = varient_pod_units[0];
  varient_pod_unit = parseInt(varient_pod_unit);
  OfferProperty = OfferProperty[0];
  if (varient_pod_unit > 0) {
    podData = { 'quantity': 1, 'id': offerId, 'properties': { '_POD': OfferProperty } }
  } else {
    podData = { 'quantity': 1, 'id': offerId }
  }
  if ($(this).hasClass("algolia_pod_offer")) {
    $.ajax({
      url: "/cart/add.js",
      dataType: "json",
      cache: !1,
      type: "post",
      data: podData,
      success: function (e) {
        document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
          bubbles: !0
        }));
        setTimeout(function () {
          Shopify.cart_item_count();
        }, 1500)
        document.getElementById("mini-cart").open = !0, document.querySelector("body").classList.add("noScroll"), $(".search-clear-icon").css('display', 'flex')
      }
    })
  } else {
    $.ajax({
      url: "/cart/add.js",
      dataType: "json",
      cache: !1,
      type: "post",
      data: podData,
      success: function (e) {
        document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
          bubbles: !0
        }));
        setTimeout(function () {
          Shopify.cart_item_count();
        }, 1500)
      }
    })
  }
});

Shopify.loginInput = function ($otp_length) {
  // FOR LOGIN OTP INPUT FIELDS
  var OTP_element = document.getElementById('OTPInput');
  if (OTP_element != null) {
    for (let i = 0; i < $otp_length; i++) {
      let inputField = document.createElement('input'); // Creates a new input element
      inputField.id = 'otp-field' + i; // Don't remove
      inputField.maxLength = 1; // Sets individual field length to 1 char
      inputField.type = 'tel';
      inputField.pattern = '[0-9]*';
      OTP_element.appendChild(inputField); // Adds the input field to the parent div (OTPInput)
    }

    /*  This is for switching back and forth the input box for user experience */
    const inputs = document.querySelectorAll('#OTPInput > *[id]');
    for (let i = 0; i < inputs.length; i++) {
      inputs[i].addEventListener('keydown', function (event) {
        if (event.key === "Backspace") {
          if (inputs[i].value == '') {
            if (i != 0) {
              inputs[i - 1].focus();
            }
          } else {
            inputs[i].value = '';
          }
        } else if (event.key === "ArrowLeft" && i !== 0) {
          inputs[i - 1].focus();
        } else if (event.key === "ArrowRight" && i !== inputs.length - 1) {
          inputs[i + 1].focus();
        } else if (event.key != "ArrowLeft" && event.key != "ArrowRight") {
          inputs[i].setAttribute("type", "tel");
          inputs[i].value = ''; // Bug Fix: allow user to change a random otp digit after pressing it
        }
      });
      inputs[i].addEventListener('input', function () {
        inputs[i].value = inputs[i].value.toUpperCase(); // Converts to Upper case. Remove .toUpperCase() if conversion isnt required.
        if (i === inputs.length - 1 && inputs[i].value !== '') {
          $('.otp-login-confirm-btn').addClass('active');
          return true;
        } else if (inputs[i].value !== '') {
          inputs[i + 1].focus();
          $('.otp-login-confirm-btn').removeClass('active');
          $('.otp-login-body-container').removeClass('login_error');
        }
      });

      inputs[i].addEventListener('paste', function (event) {
        event.preventDefault();
        var clipboardData = event.clipboardData || window.clipboardData;
        var pastedText = clipboardData.getData('text');
        for (let j = 0; j < pastedText.length && i + j < inputs.length; j++) {
          inputs[i + j].value = pastedText[j];
        }

        if (i + pastedText.length < inputs.length) {
          inputs[i + pastedText.length].focus();
        } else if (i + pastedText.length === inputs.length) {
          $('.otp-login-confirm-btn').addClass('active');
        }
      });
    }
  }
}

// Shopify.loginInput(6);
Shopify.custom_otp_login();

Shopify.notifyMe = function (btn) {
  event.preventDefault();
  let notifyMe_popup_Button = btn;
  var quick_popup_desktop = document.querySelectorAll('quick-buy-drawer');
  var quick_popup_mobile = document.querySelectorAll('quick-buy-popover');
  function quick_add_popup(quick_popup) {
    if (quick_popup != null) {
      for (let i = 0; i < quick_popup.length; i++) {
        quick_popup[i].open = !1
      }
    }
  }
  quick_add_popup(quick_popup_desktop);
  quick_add_popup(quick_popup_mobile);
  document.querySelector('body').classList.add('overflow-hidden');
  var popupCloseButton = event.target;
  document.addEventListener("click", function (event) {
    var popupContainer = document.querySelector(".notifyMe_popup_container");
    // Check if the click occurred outside the popup container and not on the close button
    if (popupContainer != null && !popupContainer.contains(event.target) && event.target !== popupCloseButton) {
      closePopup();
    }
  });

  function closePopup() {
    $('.notifyMe_popup__main_container').removeClass('show');
    $('body').removeClass('overflow-hidden');
    document.querySelector('.notifyMe_popup__main_container').innerHTML = '';
  }
  var dataSet = btn.dataset;
  var varientID = dataSet["variantId"];
  varientID = parseInt(varientID);
  var varientSelector = '';
  var varientUrl = dataSet["url"];
  varientUrl = varientUrl + "?variant=" + varientID + "&view=notifyMe-popup";
  $.ajax({
    url: varientUrl,
    type: "GET",
    dataType: "html",
    success: function (e) {
      $(".notifyMe_popup__main_container").html(e);
      // Shopify.loginInput(6);
      Shopify.custom_otp_login();
      const notifyMe_tempDiv = document.createElement('div');
      notifyMe_tempDiv.innerHTML = e;

      $('#notifyMe_submit_btn').click(function () {
        event.preventDefault();
        var varient_id = $('#variants_select').val();
        var mobile_number = $('#notifyMe_mobile_number').val();
        var productName = $('.notifyMe_popup_title').text().trim();
        var variantTitle = $('#variants_select_title').val();
        var title = $('.notifyMe_popup_title').text().trim() + " - " + $('#variants_select_title').val();
        var notifyMe_arr = [];
        var notifyMe_data = '';
        var notifyMe_varient = { "id": varient_id, "mobile_number": mobile_number, "title": title, "product_name": productName, "variant_title": variantTitle };
        if (mobile_number.length < 1) {
          $('#message_holder').html('Phone number is required.');
        } else if (mobile_number.length < 10) {
          $('#message_holder').html('Invalid phone number.');
        } else {
          $('#message_holder').html('');
          function isJson(str) {
            try {
              JSON.parse(str);
            } catch (e) {
              return false;
            }
            return true;
          }
          // CleverTap event for notify me
          clevertap.event.push("Notify Me When Available", notifyMe_varient);
          clevertap.profile.push({
            Site: {
              "Product Subscribed for Notify": productName,
              "Variant Subscribed for Notify": variantTitle,
              "Variant ID Subscribed for Notify": varient_id,
              "Mobile Number Subscribed for Notify": mobile_number
            }
          })

          if (isJson(localStorage.notifyMe_data)) {
            notifyMe_data = JSON.parse(localStorage.notifyMe_data);
            notifyMe_data = notifyMe_data.filter(obj => obj.id !== varient_id);
            notifyMe_arr = notifyMe_data;
          }
          notifyMe_arr.push(notifyMe_varient);
          notifyMe_arr = JSON.stringify(notifyMe_arr);
          localStorage.setItem('notifyMe_data', notifyMe_arr);
          document.querySelector('.completed_message').style.display = 'block';
          var custom_popup_body = this.closest('.custom_popup');
          setTimeout(function () {
            custom_popup_body.classList.remove('show');
            document.querySelector('body').classList.remove('overflow-hidden');
            $('#mobile_number').val('');
            document.querySelector('.completed_message').removeAttribute('style');
          }, 3000);
        }
      });
      $('.variants_color_select').change(function () {
        var varientImage = $(this).attr('data-image');
        var varientId = $(this).attr('data-id');
        var variantTitle = $(this).attr('data-title');
        $('.notifyMe_popup_product_img img').attr('src', varientImage);
        $('.notifyMe_form-group input').val(varientId);
        $('#variants_select_title').val(variantTitle);
      });
    }
  })

  $('.notifyMe_popup__main_container').addClass('show');

}

$('#notifyMe_trigger').click(function (e) {
  e.preventDefault();
  sessionStorage.setItem('login_location', window.location.href);
});
//Function to allow only numbers
function _isNumberCheck(evt) {
  var charCode = (evt.which) ? evt.which : event.keyCode
  if (charCode > 31 && (charCode < 48 || charCode > 57 || evt.target.value.length > 9))
    return false;
  return true;
}

// Not allow 0 as first digit on input
$(document).on("input", "#mobile_number", (e) => {
  $(e.target).val($(e.target).val().replace(/^[^1-9][^0-9]*$/, ''));
  $('#message_holder').html('');
})
$(document).on("keypress", "#mobile_number", (e) => {
  return _isNumberCheck(e);
})

$('.login, .login-popup-trigger').click(function () {
  event.preventDefault();
  var popupCloseButton = event.target;
  document.addEventListener("click", function (event) {
    var popupContainer = document.querySelector(".notifyMe_popup_container");
    // Check if the click occurred outside the popup container and not on the close button
    if (popupContainer != null && !popupContainer.contains(event.target) && event.target !== popupCloseButton) {
      closePopup();
    }
  });

  function closePopup() {
    $('.login_popup_main_container').removeClass('show');
    $('body').removeClass('overflow-hidden');
    document.querySelector('.login_popup_main_container').innerHTML = '';
  }

  $.ajax({
    url: "/account/login?view=otp-login-popup",
    type: "GET",
    dataType: "html",
    success: function (e) {
      document.querySelector('body').classList.add('overflow-hidden');
      $(".login_popup_main_container").html(e);
      // Shopify.loginInput(6);
      Shopify.custom_otp_login();
    }
  });
  $('.login_popup_main_container').addClass('show');
  // $('#pincode-checker-Modal').removeClass('show');
});

Shopify.varient_view_popup = function (varient_id, btn) {
  const prod__title = btn.dataset.title;
  clevertap.event.push('3D button clicked', {
    "Product Title": prod__title
  });
  var varient_view_popup_close_btn = btn;
  document.addEventListener("click", function (event) {
    var varient_view_popup_container = document.querySelector(".pdp-360-view_container");
    if (varient_view_popup_container != null && !varient_view_popup_container.contains(event.target) && event.target !== varient_view_popup_close_btn) {
      $('.pdp-360-view').removeClass('show');
      $('body').removeClass('overflow-hidden');
      document.querySelector('.pdp-360-view_body').innerHTML = '';
    }
  });
  $.ajax({
    url: location.pathname + "?variant=" + varient_id + "&view=3D_view",
    type: "GET",
    dataType: "html",
    success: function (e) {
      $(".pdp-360-view_body").html(e);
      $('.pdp-360-view').addClass('show');
      $('body').addClass('overflow-hidden');
      let popup_detail = $('.pdp_view_popup_item');
      $('.pdp_view_popup_btn_container button').click(function () {
        var index = $(this).attr('data-index');
        for (i = 0; i < popup_detail.length; i++) {
          if (popup_detail[i].hasAttribute("open")) {
            popup_detail[i].removeAttribute("open");
          }
        }
        $('.pdp_view_popup_btn_container button').removeAttr('active');
        $(this).attr('active', 'true');
        popup_detail[index].setAttribute('open', 'true');
      });
    }
  })
}

// Product personalization

$.ajax({
  type: "GET",
  url: "https://cdn.shopify.com/s/files/1/0057/8938/4802/files/Validate_Words_-_Sheet1.csv?v=1686812344",
  dataType: "text",
  success: function (data) {
    const Validate_Words = data.split(/\r\n|\n/).map(word => word.toUpperCase());
    //console.log(Validate_Words);
    sessionStorage.setItem('Validate_Words', JSON.stringify(Validate_Words));
  }
});

let variant_personalization_id;
let engravproductArray = [];
let corpproductArray = [];
let nonengv_prod, nonengv_prod_price, engraving_price;

function cutomized_btn(key, value, e) {
  nonengv_prod_price = $(".engrav:checked").attr("variant-price");
  engraving_price = parseInt(variant_personalization_id[key].engraving_price);
  var engravingFinalPrice, parseVariantPrice;

  // gatting selected variant price and doing calculation for engrave-final-price
  if (value) {
    var variantPrice = value.price / 100;
    engraving_actual_price = parseInt(variant_personalization_id[key].price);
    parseVariantPrice = variantPrice; // Assign parseVariantPrice here
    engravingFinalPrice = engraving_actual_price - parseVariantPrice;
  } else {
    var variantPrice = $('[data-variant-price]').attr('data-variant-price');
    parseVariantPrice = parseInt(variantPrice) / 100; // Parse and divide here
    engraving_actual_price = parseInt(variant_personalization_id[key].price);
    engravingFinalPrice = engraving_actual_price - parseVariantPrice;
  }

  engraving_price = engraving_price > 0 ? `At just ₹${engravingFinalPrice}*` : `Free`;

  $('.submit-personalization').attr('data-varientid', variant_personalization_id[key].id);
  $('.personalization-image-wrapper img').attr('src', variant_personalization_id[key].image);
  $(".personalization-image-wrapper .text-overlay").attr('style', variant_personalization_id[key].style);
  $(".personalization-sub-heading").text(engraving_price);

  const show = variant_personalization_id[key].available === "true";
  
  $(".cutomized-btn, .buy-now-btn, .desktop_reviews_wrapper .offer-callout-simple.personalised, .offer-callout-simple.personalised, .button.custom-prebook, .banner_link.pdp-personalized").toggleClass("customized-hidden", !show);
  $(".cutomized-btn~#AddToCart").toggleClass("customized-hidden", show);
  $("#gokwik-buy-now").toggleClass("customized-hidden", show);
  if (window.innerWidth < 769) { $(".product-offer-pdp").toggleClass("offer-fixed-pdp", !show); }
  $(".personalised-offer").toggleClass("customized-hidden", !show);

  //for pdp personalised banner
  $('.banner-product-image').attr('src', variant_personalization_id[key].image);
  $("#stringContainer").attr('style', variant_personalization_id[key].style);
  $('.banner_link pdp-personalized').toggleClass("");

  /* helper fucntion to chech seleted option has custom-inventory */
  function getInventoryAttributes(optionValue) {
    // Find the matching input and check its data-inventory and data-inventory-limit attributes
    const matchingInput = [...document.querySelectorAll('.product-form__variants .color-swatch-list input')]
      .find(input => input.value === optionValue && input.getAttribute('data-inventory-limit'));

    if (matchingInput) {
      // Return an object with both attributes
      return {
        inventoryLimit: matchingInput.getAttribute('data-inventory-limit'),
        inventory: matchingInput.getAttribute('data-inventory')
      };
    }

    return null; // Return null if no matching input is found
  }

  const optionValue = key;
  const inventoryAttributes = getInventoryAttributes(optionValue);
  let variantAvailable = true; // We will use this falg if we are making variant out of stock condition

  if (inventoryAttributes) {    
    let customInventoryLimit = parseInt(inventoryAttributes.inventoryLimit); 
    let variantActualInventory = parseInt(inventoryAttributes.inventory); 

    if (variantActualInventory && customInventoryLimit) {
      if (variantActualInventory && customInventoryLimit && variantActualInventory <= customInventoryLimit) {
        $(".cutomized-btn").toggleClass("customized-hidden");
        $(".personalised-offer").toggleClass("customized-hidden");
        $(".custom_notifyMe_btn").show();
        variantAvailable = false;
      } else {
        $(".cutomized-btn").removeClass("customized-hidden");
        $(".personalised-offer").removeClass("customized-hidden");
        $(".custom_notifyMe_btn").hide();
        variantAvailable = true;
      }
    } 
  } else {
      $(".custom_notifyMe_btn").hide();
      variantAvailable = true;
  }

  // On variant change check selected varaint engrave is available -- [custom-limit]
  const selectedVariantLabel = key;
  if (window.location.href.includes('products')) {
    // personalization custom qty handle on PDP
    window.toggleElementsBasedOnInventory(selectedVariantLabel);
  } else {
    // personalization custom qty handle on PLP
    // window.toggleProductItemBasedOnInventory(selectedVariantLabel, e.target.closest('.product-item'), variantAvailable);
    
    window.toggleProductItemBasedOnInventory(
    selectedVariantLabel, 
    e.target.closest('.product-item') || e.target.closest('.st-product-card'), 
    variantAvailable
    );
  }
} 

Shopify.personalizedText = function (e, value) {
  if (e && e?.target?.parentElement.offsetParent.querySelector('.personilaztion-message-modal')) {
    var customPrebookBtn = e?.target?.parentElement.offsetParent.querySelector('.custom-prebook');
    var customPreorderBtn = e?.target?.parentElement.offsetParent.querySelector('.cutomized-btn');
    var customBuyBtn = e?.target?.parentElement.offsetParent.querySelector('.buy-now-btn');
    var personalizationModalOverlay = e?.target?.parentElement.offsetParent.querySelector('.personilaztion-message-modal-overlay');
    var personalizationModal = e?.target?.parentElement.offsetParent.querySelector('.personilaztion-message-modal');
    var personalizationSubmitBtn = e?.target?.parentElement.offsetParent.querySelector('.submit-personalization');
    var personalizedText = e?.target?.parentElement.offsetParent.querySelector('#personalized-text');
    var skipPersonalize = e?.target?.parentElement.offsetParent.querySelector('.skip-personalization');
    var skipPersonalizeBuyNow = e?.target?.parentElement.offsetParent.querySelector('.click-buy-now');
    var errorMessage = e?.target?.parentElement.offsetParent.querySelector('.personalization-error-mes');
    nonengv_prod = e?.target?.parentElement.offsetParent.querySelector('.engrav:checked').value;

    variant_personalization_id = e?.target?.parentElement.offsetParent.querySelector('.personilaztion-message-modal').getAttribute('data-variant_personalization_id');

    // info: generate Combine Names
    // var generateName = e?.target?.parentElement.offsetParent.querySelector(".generate-name");
    // var userName =  e?.target?.parentElement.offsetParent.querySelector("#personalized-text-name-1")?.value;
    // var partnerName =  e?.target?.parentElement.offsetParent.querySelector("#personalized-text-name-2")?.value;
    // var nameCombination = e?.target?.parentElement.offsetParent.querySelector(".name-combination");
    // var pdp =true;

  } else {
    var customPrebookBtn = document.querySelector('.custom-prebook');
    var customPreorderBtn = document.querySelector('.cutomized-btn');
    var customBuyBtn = document.querySelector('.buy-now-btn');
    var personalizationModalOverlay = document.querySelector('.personilaztion-message-modal-overlay');
    var personalizationModal = document.querySelector('.personilaztion-message-modal');
    var personalizationSubmitBtn = document.querySelector('.submit-personalization');
    var personalizedText = document.querySelector('#personalized-text');
    var skipPersonalize = document.querySelector('.skip-personalization');
    var personalizationFreebieAtc = document.querySelector('.custom-freebie-button');
    var skipPersonalizeBuyNow = document.querySelector('.click-buy-now');
    var errorMessage = document.querySelector('.personalization-error-mes');
    var addtoCart = document.querySelector("#AddToCart");
    var customFreebieATC = document.querySelector("#freebie-add-to-cart");
    var customFreebieBuyNow = document.querySelector("#freebie-buy-now-btn");

    nonengv_prod = $(".engrav:checked").val();

    variant_personalization_id = $('.personilaztion-message-modal').attr('data-variant_personalization_id');

    // info: generate Combine Names
    // var generateName = document.querySelector(".generate-name");
    // var userName =  document.querySelector("#personalized-text-name-1")?.value;
    // var partnerName =  document.querySelector("#personalized-text-name-2")?.value;
    // var nameCombination = document.querySelector(".name-combination");
    // var pdp =true;
  }
  if (variant_personalization_id && variant_personalization_id !== null) {
    variant_personalization_id = JSON.parse(variant_personalization_id);
    for (var key in variant_personalization_id) {
      if (key == nonengv_prod) {
        // if(variant_personalization_id[key].available == 'true') {
        //     // Show the personalised-offer
        //     $(".personalised-offer").toggleClass("customized-hidden", false);
        //     $(".personalised-offer").show();
        // } else {
        //     // Hide the personalised-offer
        //     $(".personalised-offer").toggleClass("customized-hidden", true);
        //     $(".personalised-offer").hide();
        // }
        cutomized_btn(key, value, e);
        break;
      }
    }
  }


  //Input validation
  const textOverlay = document.getElementById('text-overlay');

  if (personalizedText) {
    // Disable  paste events
    personalizedText.addEventListener('paste', (e) => { e.preventDefault(); });

    personalizedText.addEventListener("keyup", () => {
      textOverlay.textContent = personalizedText.value;
      personalizationSubmitBtn.classList.toggle('visually-hidden', personalizedText.value.trim().length < 1);
    })

    personalizedText.addEventListener('input', (e) => {
      let inputValue = e.target.value;
      // Remove characters that are not alphanumeric or white space
      inputValue = inputValue.replace(/[^a-zA-Z0-9\s!@#$%^&*()\-_]/g, '');
      // Limit the input to the maximum number of characters
      inputValue = inputValue.slice(0, 12);
      e.target.value = inputValue;
    });

    function openPersonalizationModal() {
      personalizationModalOverlay.classList.remove('hide')
      personalizationModal.classList.remove("hide")
      document.body.classList.add('noScroll');
    }
    
     customPrebookBtn.addEventListener('click', openPersonalizationModal)
     customPrebookBtn.addEventListener('click', function() {
      personalizationModal.classList.remove('buy-now-clicked')
      skipPersonalizeBuyNow.classList.add('visually-hidden')
      skipPersonalize.classList.remove('visually-hidden')
    })
    customPreorderBtn.addEventListener('click', openPersonalizationModal)
    customPreorderBtn.addEventListener('click', function() {
      personalizationModal.classList.remove('buy-now-clicked')
      skipPersonalizeBuyNow.classList.add('visually-hidden')
      skipPersonalize.classList.remove('visually-hidden')
      
      if (window.location.href.includes('products')) {
        if (window.isEngraveAvailableFlag) {
          if (skipPersonalize && !skipPersonalize.classList.contains('d-none')){
            skipPersonalize.classList.add('d-none');
          }
  
          if (personalizationFreebieAtc && personalizationFreebieAtc.classList.contains('d-none')){
            personalizationFreebieAtc.classList.remove('d-none');
          }

          if (skipPersonalizeBuyNow && skipPersonalizeBuyNow.classList.contains('d-none')){
            skipPersonalizeBuyNow.classList.remove('d-none');
          }
        } else if (window.isEngraveAvailableFlag == false) {
          if (skipPersonalize && skipPersonalize.classList.contains('d-none')){
            skipPersonalize.classList.remove('d-none');
          }
  
          if (personalizationFreebieAtc && !personalizationFreebieAtc.classList.contains('d-none')){
            personalizationFreebieAtc.classList.add('d-none');
          }

          if (skipPersonalizeBuyNow && skipPersonalizeBuyNow.classList.contains('d-none')){
            skipPersonalizeBuyNow.classList.remove('d-none');
          }
        }
      }
    })
    customBuyBtn?.addEventListener('click', openPersonalizationModal)
    customBuyBtn?.addEventListener('click', function() {
      personalizationModal.classList.add('buy-now-clicked')
      skipPersonalizeBuyNow.classList.remove('visually-hidden')
      skipPersonalize.classList.add('visually-hidden')

      if (window.location.href.includes('products')) {
        if (window.isEngraveAvailableFlag) {
          if (skipPersonalizeBuyNow && !skipPersonalizeBuyNow.classList.contains('d-none')){
            skipPersonalizeBuyNow.classList.add('d-none');
          }
  
          if (personalizationFreebieAtc && personalizationFreebieAtc.classList.contains('d-none')){
            personalizationFreebieAtc.classList.remove('d-none');
          }

          if (skipPersonalize && skipPersonalize.classList.contains('d-none')){
            skipPersonalize.classList.remove('d-none');
          }
        } else if (window.isEngraveAvailableFlag == false) {
          if (skipPersonalizeBuyNow && skipPersonalizeBuyNow.classList.contains('d-none')){
            skipPersonalizeBuyNow.classList.remove('d-none');
          }
  
          if (personalizationFreebieAtc && !personalizationFreebieAtc.classList.contains('d-none')){
            personalizationFreebieAtc.classList.add('d-none');
          }

          if (skipPersonalize && skipPersonalize.classList.contains('d-none')){
            skipPersonalize.classList.remove('d-none');
          }
        }
      }
    })

    Shopify.closePersonalizationModal = function () {
      personalizedText.value = ""; textOverlay.textContent = "";
      personalizationSubmitBtn.classList.add('visually-hidden');
      personalizationModalOverlay.classList.add('hide');
      personalizationModal.classList.add("hide");
      document.body.classList.remove('noScroll');
      errorMessage.innerHTML = '';
      // console.log("close");
    }

    personalizationSubmitBtn.addEventListener('click', (e) => {
      const pMessage = personalizedText.value;
      const variantId = e.target.dataset.varientid;
      const Validate_Words = JSON.parse(sessionStorage.getItem('Validate_Words'));

      if (Validate_Words.includes(pMessage)) {
        errorMessage.innerHTML = 'Please enter a valid word';
        errorMessage.classList.remove('visually-hidden');
        return;
      }

      if (pMessage.trim() !== ''
        //  comment the code below if mavin finishes
        && engravproductArray.length == 0
      ) {
        var personalization_data = { 'quantity': 1, 'id': variantId, 'properties': { 'PersonalisedMessage': pMessage } };
        var drawer_element = document.querySelector(".drawer--quick-buy[open], .popover--quick-buy[open]");
        $.ajax({
          url: "/cart/add.js",
          dataType: "json",
          cache: !1,
          type: "post",
          data: personalization_data,
          success: function (e) {
            dispatch_cartUpdate(e);
            document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
              bubbles: !0
            })), document.getElementById("mini-cart").open = !0, setTimeout(function () {
              Shopify.cart_item_count();
              cart_bubble();
            }, 1500)
            if (drawer_element != null) {
              drawer_element.removeAttribute("open");
            }
            Shopify.closePersonalizationModal();
          },
          error: function (e) {
            console.warn(e);
            errorMessage.innerHTML = 'Engrave variant is out of stock, please add another variant';
            errorMessage.classList.remove('visually-hidden');
          }
        })
      } else {
        errorMessage.innerHTML = 'Only 1 engraved unit is allowed in one order';
        errorMessage.classList.remove('visually-hidden');
      }
    })

    // on click of pdp banner mobile open the personalized product
    document.querySelector(".banner_link.pdp-personalized")?.addEventListener('click', openPersonalizationModal);
    document.querySelector(".banner_link.pdp-personalized")?.addEventListener('click', function () {
      const productTitle = this.dataset.product;
      clevertap.event.push('Personalised banner clicked', {
        "Product": productTitle
      })
    });

   
    skipPersonalize.addEventListener('click', (e) => {
      Shopify.closePersonalizationModal();
      (addtoCart) ? addtoCart.click() : skipPersonalize.closest(".product-form__buy-buttons").querySelector("#AddToCart").click();
      $("quick-buy-drawer .drawer__overlay, quick-buy-popover .drawer__overlay").click();
      setTimeout(function () { document.getElementById("mini-cart").open = !0; }, 100);
    });

    skipPersonalizeBuyNow?.addEventListener('click', (e) => {
      Shopify.closePersonalizationModal();

      document.querySelector("#gokwik-buy-now").click();
      clevertap.event.push('Skip Personalized - Buy Now');
    });

    $('.personalized-modal-close, .personilaztion-message-modal-overlay').on('click', Shopify.closePersonalizationModal);


    // don't know why its there $('.drawer__close-button').click(function () {Shopify.closePersonalizationModal()});

    // info: generate Combine Names
    /*
    var userNameInput = pdp == true ? document.querySelector("#personalized-text-name-1") : e?.target?.parentElement.offsetParent.querySelector("#personalized-text-name-1");
    var partnerNameInput =  pdp == true ? document.querySelector("#personalized-text-name-2") : e?.target?.parentElement.offsetParent.querySelector("#personalized-text-name-2");
    

    function handleInput(e, maxLength) {
      let inputValue = e.target.value;
      // Remove characters that are not alphanumeric or white space
      inputValue = inputValue.replace(/[^a-zA-Z0-9\s!@#$%^&*()\-_]/g, '');
      // Limit the input to the maximum number of characters
      inputValue = inputValue.slice(0, maxLength);
      e.target.value = inputValue;
    }
    
    userNameInput.addEventListener('input', (e) => handleInput(e, 12));
    partnerNameInput.addEventListener('input', (e) => handleInput(e, 12));
    

    generateName?.addEventListener("click",function(){

      var userName = pdp == true ? document.querySelector("#personalized-text-name-1")?.value : e?.target?.parentElement.offsetParent.querySelector("#personalized-text-name-1")?.value ;
      var partnerName =  pdp == true ? document.querySelector("#personalized-text-name-2")?.value : e?.target?.parentElement.offsetParent.querySelector("#personalized-text-name-2")?.value;
      

      if(userName != "" && partnerName != "")
      {
        // Combine the first and last parts to generate a new name
        let generatedName1 = "";
        let generatedName2 = "";
        let generatedName3 = "";
        let generatedName4 = "";

        if(userName.length <= 3 || partnerName.length <= 3){
          generatedName1 = userName.slice(0, 3) + partnerName.slice(0, 3);
          generatedName2 = userName.slice(-3) + partnerName.slice(-3);
          generatedName3 = userName.slice(0, 3) + partnerName.slice(-3);
          generatedName4 = userName.slice(-3) + partnerName.slice(0, 3);
        } else {
          generatedName1 = userName.slice(0, 4) + partnerName.slice(0, 4);
          generatedName2 = userName.slice(-4) + partnerName.slice(-4);
          generatedName3 = userName.slice(0, 4) + partnerName.slice(-4);
          generatedName4 = userName.slice(-4) + partnerName.slice(0, 4);
        }
        
        nameCombination.innerHTML =  `<p class="generated-name-btn">${generatedName1}</p> <p class="generated-name-btn">${generatedName2}</p> <p class="generated-name-btn">${generatedName3}</p> <p class="generated-name-btn">${generatedName4}</p>`;
    
        let generateNameBtn = pdp == true ? document.querySelectorAll(".generated-name-btn") : e?.target?.parentElement.offsetParent.querySelectorAll(".generated-name-btn");
        generateNameBtn?.forEach((name)=>{
          name?.addEventListener("click",function(){
            personalizedText.value = name.innerHTML;
            textOverlay.innerHTML = name.innerHTML;
            personalizationSubmitBtn.classList.remove('visually-hidden');
          })
        })
        nameCombination.style.display = "flex";
      } else {
        userName == "" ? document.querySelector(".generate-name-error").innerHTML ="Enter your name" : document.querySelector(".generate-name-error").innerHTML ="Enter your partner name";
        nameCombination.style.display = "none";
        setTimeout(() => {
          document.querySelector(".generate-name-error").innerHTML = ""
        }, 5000)
      }
  })
  */
  }

}

Shopify.personalizedText();
// Shopify.cartNote = function (text) {
//   $.ajax({
//     url: '/cart/update.js',
//     dataType: 'json',
//     type: 'post',
//     data: { note: text },
//     success: function (cart) {
//       //  console.log('cart', cart);
//     }
//   })
// }

Shopify.cartNote = async function (text) {
  try {
    const response = await fetch('/cart/update.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ note: text })
    });

    if (!response.ok) {
      throw new Error('Failed to update cart note');
    }

    // const cart = await response.json();
    // console.log('Cart updated:', cart);
    // return cart; // Return cart data if needed
  } catch (error) {
    console.error('Error updating cart note:', error);
  }
};


var cartItem;
// Fetch cart items and filter for personalized messages

//onload
jQuery.getJSON('/cart.js', function (cart) {
  cartItem = cart.items;
  corpproductArray = cartItem.filter(item => item.properties && item.properties.corporate !== undefined);
  engrv_cart_update(cartItem);
  corp_cart_update(cartItem);
  covercase_cart_update(cartItem);
});

$(document).ready(function (e) {
  setTimeout(() => {
    if(localStorage.getItem('hasCorpProduct')) {
      hideBtn()
    }
  }, 1000)
  
  // Product personalization
  // checkEngravedAvailability(e);
})

// console.log(engravproductArray.length);
function engrv_cart_update(cartItem) {
  
  const engraveBtnSets = document.querySelector('#shopify-section-mini-cart .engrave-button__sets');
  const covercaseBtnSets = document.querySelector('#shopify-section-mini-cart .covercase-button__sets');

  
  //##This condition is used to check engrave product is present in cart or not
  engravproductArray = cartItem.filter(item => item.properties && item.properties.PersonalisedMessage !== undefined);
  if(cartItem.length === 0 ) {
    
    Shopify.cartNote('');
  }

  if(engravproductArray.length > 0) {
    Shopify.cartNote(engravproductArray.length > 0 ? 'personalised' : '');
  }

  if (engravproductArray.length > 0 && cartItem.length > 1) {
    $("#shopify-section-mini-cart").addClass("popup_show");
  } else {
    $("#shopify-section-mini-cart").removeClass("popup_show");
  }
}

function corp_cart_update(cartItem) {
  corpproductArray = cartItem.filter(item => item.properties && item.properties.corporate !== undefined);

  if(cartItem.length === 0) {
    
    Shopify.cartNote('');
  }

  if(corpproductArray.length > 0) {
    Shopify.cartNote(corpproductArray.length > 0 ? 'corporate' : '');
  }
  if (corpproductArray.length > 0 && cartItem.length > 1) {
    $("#shopify-section-mini-cart").addClass("popup_show");
  } else if (corpproductArray.length > 0) {
    localStorage.setItem('hasCorpProduct',true);
    $(".corp-atc-btn").css('pointer-events', 'none');
    $(".corp-atc-btn").css('background', '#ccc');
    $('.already-err-msg').removeClass('visually-hidden');
  } else {
    if(engravproductArray.length <= 0) {
      $("#shopify-section-mini-cart").removeClass("popup_show");
    }
    localStorage.removeItem('hasCorpProduct');
    $(".corp-atc-btn").css('pointer-events', 'auto');
    $(".corp-atc-btn").css('background', '#000');
    $('.already-err-msg').addClass('visually-hidden');
  }
}

function hideBtn() {
  localStorage.setItem('hasCorpProduct', true);
  setTimeout(() => {
    $(".corp-atc-btn").css('pointer-events', 'none');
    $(".corp-atc-btn").css('background', '#ccc');
    $('.already-err-msg').removeClass('visually-hidden')
  }, 3000)
}

window.coverProductArray = [];

async function covercase_cart_update(cartItem) {
  let updatedCart ;
  coverProductArray = cartItem.filter(item => item.properties && (item.properties._master === "true" || item.properties._coverproduct === "cover-freebee"));
  
  // setting cart note
  if (coverProductArray.length > 0) {
    await Shopify.cartNote(coverProductArray.length > 0 ? 'Cover' : '');
    
  } else if (engravproductArray.length > 0) {
    await Shopify.cartNote(engravproductArray.length > 0 ? 'personalised' : '');
  }

  // cart do not have freebie product remove covercase product
  if (coverProductArray.length == 0) {
    // await Shopify.cartNote('');
    if (localStorage.getItem("_coverproduct") != '') {
      localStorage.removeItem("_coverproduct");
    }
    if (localStorage.getItem("_masterProductID") != '') {
      localStorage.removeItem("_masterProductID");
    }
  }

  // if cartItem is 0 then remove sesstion storage
  if (cartItem.length === 0) {
    await Shopify.cartNote('');
    if (localStorage.getItem("_coverfreebee") != '') {
      localStorage.removeItem("_coverfreebee");
    }
    if (localStorage.getItem("_masterProductID") != '') {
      localStorage.removeItem("_masterProductID");
    }
  }

  // if cart has only one _coverproduct line-item product
  if (coverProductArray.length == 1) {
    let payNowBtn = document.querySelector(".gokwik-checkout button");
    
    payNowBtn?.classList.add("disabled");
    payNowBtn?.setAttribute("disabled", "disabled");

    const remainingMasterProduct = cartItem.filter(item => item.properties && item.properties._master == "true");
    const remainingFreebieProduct = cartItem.filter(item => item.properties && item.properties._coverproduct == "cover-freebee");

    if (remainingFreebieProduct != 0) {
      // if only freebie product available (_coverproduct == "cover-freebee")
      const updates = {};

      coverProductArray.forEach(item => {
        updates[item.id] = 0;
      });

      let coverProductId = coverProductArray[0].id;

      // Create the body payload with updates and section
      const payload = {
        updates: updates,
        sections: 'mini-cart'  // Specify the section here
      };


      fetch('/cart/update.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify(payload)
      })
        .then(response => response.json())
        .then(cart => {

          let lineItem = document.querySelector(`line-item[data-item-id="${coverProductId}"]`);
          lineItem?.dispatchEvent(new CustomEvent("line-item-quantity:change:start", { bubbles: true}))

          document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
            bubbles: true ,
            detail: {
              cart: cart
            }
          }));
          Shopify.cart_item_count();
          cart_bubble();
          if (localStorage.getItem("_coverproduct") != '') {
            localStorage.removeItem("_coverproduct");
          }
          if (localStorage.getItem("_masterProductID") != '') {
            localStorage.removeItem("_masterProductID");
          }
          // dispatch_cartUpdate(cart);
          // refreshCartUI();
        })
        .catch(error => {
          console.error('Error updating cart:', error);
        });

      return true;
    } else if (remainingMasterProduct != 0) {
      // if only master product available (_coverproduct == "master")
      let masterProductId = remainingMasterProduct[0].id;

      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          const lineItem = cart.items.find(item => item.variant_id === masterProductId);
          
          if (lineItem) {
            const lineItemKey = lineItem.key;
            removeLineItemProperty(lineItemKey);
          } else {
            console.error('Line item with variant ID not found.');
          }
        })
        .catch(error => console.error('Error fetching cart:', error));

      function removeLineItemProperty(lineItemKey) {
        fetch('/cart/change.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            id: lineItemKey, 
            properties: {
              _master: false 
            }
          })
        })
        .then(response => response.json())
        .then(cart => {
          if ($("#shopify-section-mini-cart").hasClass("popup_show")) {
            $("#shopify-section-mini-cart").removeClass("popup_show");
          }
          localStorage.setItem("_coverfreebee","removed");
          dispatch_cartUpdate(cart);
          refreshCartUI();
        })
        .catch(error => {
          console.error('Error updating cart:', error);
        });

        return true;
      }
    } 
  }
  

  // when cart cover freebie cart-drawer product manager pop-up
  $.getJSON('/cart.js', function(cart) {
        
    if (coverProductArray.length > 0) {
      if (coverProductArray.length == 2 && cart.items.length - coverProductArray.length == 0) {
        // cart-personalization popup close = when cart has only cover and master product
        $("#shopify-section-mini-cart").removeClass("popup_show");
      } else if (coverProductArray.length == 1) {
        // handle UI glich = when cart has only cover product
        $("#shopify-section-mini-cart").removeClass("popup_show");
      } else {  
        // cart-personalization popup open
        $("#shopify-section-mini-cart").addClass("popup_show");
      }
    } 
  })
}

Shopify.rewardsCartUpdate = function (cartJson) {
  const filledCart = `<svg id="Layer_2" class="filled_cart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 51.81 61.27" height="22" width="22"><defs><style>.cls-1{stroke-width:0px;}</style></defs><g id="Layer_1-2">
  <path class="header_cart_icon_svg" d="m40.1,14.94c1.23,0,2.39,0,3.55,0,3.37,0,5.45,2.06,5.67,5.44.36,5.61.8,11.22,1.2,16.83.35,4.86.69,9.73,1.03,14.59.1,1.42.24,2.84.27,4.26.04,2.24-1.44,4.26-3.57,4.92-.61.19-1.28.28-1.93.28-13.61.02-27.22.02-40.83,0-3.39,0-5.68-2.39-5.48-5.78.29-4.82.68-9.64,1.02-14.46.31-4.26.61-8.52.92-12.78.2-2.79.36-5.59.6-8.38.25-2.96,2.44-4.92,5.42-4.94,1.23,0,2.46,0,3.78,0-.31-4.59,1.21-8.4,4.64-11.38C19.09,1.2,22.29,0,25.88,0c4.04,0,7.52,1.48,10.31,4.42,2.77,2.92,4.01,6.44,3.91,10.52Zm-23.84-.05h19.31c.42-5.64-4.09-10.45-9.71-10.42-5.61.04-10.15,4.94-9.61,10.42Z"/></g></svg>`
  const blankCart = `<svg class="blank_cart" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 22 22" style="enable-background:new 0 0 22 22;" xml:space="preserve" height="22" width="22" class="blank_cart">
  <style type="text/css">
    .st0{fill-rule:evenodd;clip-rule:evenodd; fill:#000;}

    @media(min-width: 768px){
      .st0{fill:#000 !important;}
    }
  </style>
  <path class="st0 header_cart_icon_svg" d="M14,6.1v1.2C14,7.6,14.4,8,14.7,8c0.4,0,0.7-0.3,0.7-0.7V6.1h1.4c0.6,0,1.1,0.4,1.2,1l1.4,12.2  c0.1,0.6-0.4,1.2-1,1.3c0,0-0.1,0-0.1,0H3.7c-0.6,0-1.2-0.5-1.2-1.2c0,0,0-0.1,0-0.1L4,7.1c0.1-0.6,0.6-1,1.2-1h1.4v1.2  C6.6,7.6,6.9,8,7.3,8S8,7.6,8,7.3V6.1H14z M15.4,4.7V4.4C15.4,2,13.5,0,11,0S6.6,2,6.6,4.4v0.2H5.2c-1.3,0-2.4,1-2.6,2.3L1.2,19.1  C1,20.5,2,21.8,3.4,22c0.1,0,0.2,0,0.3,0h14.5c1.4,0,2.6-1.2,2.6-2.6c0-0.1,0-0.2,0-0.3L19.4,7c-0.2-1.3-1.3-2.3-2.6-2.3H15.4z   M11,1.4c-1.7,0-3,1.4-3,3l0,0v0.2H14V4.4C14,2.8,12.7,1.4,11,1.4L11,1.4z"></path>
  </svg>`
  if (cartJson?.item_count > 0) {
    $('.blank_cart').replaceWith(filledCart);
  } else {
    $('.filled_cart').replaceWith(blankCart);
  }
  // * boAt rewards script begins //
  let cartValue = 299000
  if (cartJson?.original_total_price) {
    cartValue = cartJson.original_total_price;
  } else {
    cartValue = 29900
  }
  setTimeout(() => {
    const shippingFee = $('.svalue').data('shipping-fee')
    sessionStorage.setItem('shipping_fee', shippingFee)
  }, 10)
  if (Shopify.redeem_points) {
    redeemLoyaltyPoints()
    // info: Update Cart Amount with Loyalty Pointscart:updated
    init_nector_discount_preview(cartValue);
    $('.redeemable_points').text(sessionStorage.getItem('Redeemable Points'))
  } else {
    if ($('.signin_redeem.redeem_points').length) {
      $('.redeem_now').addClass('visually-hidden')
      $('.get_points').removeClass('visually-hidden')
      $('.custom-checkbox').prop('checked', false)
      redeemLoyaltyPoints()
    }
  }
  // * boAt rewards script ends //
}

$(document).on('click', '.cart-total-breakup .toggle_arrow', function () {
  document.querySelector('.cart_total_wrapper').classList.toggle('breakup-visible')
  $('.cart-total-breakup').fadeToggle();
})

$(document).on('click', '.cart_total_wrapper', function () {
  this.classList.toggle('breakup-visible')
  $('.cart-total-breakup').fadeToggle();
})

document.addEventListener("cart:updated", function (e) {
  cartItem = e.detail.cart.items;
  corpproductArray = cartItem.filter(item => item.properties && item.properties.corporate !== undefined);
  engrv_cart_update(cartItem);
  corp_cart_update(cartItem);
  setTimeout(() => {
    let refurbishedArray = cartItem.filter(item => item.properties && item.properties.refurbished !== undefined);
    if(refurbishedArray.length > 0) {
      Shopify.cartNote(refurbishedArray.length > 0 ? 'refurbished' : '');
    }
    if(corpproductArray.length > 0) {
      Shopify.cartNote(corpproductArray.length > 0 ? 'corporate' : '');
    }
  }, 10)
  setTimeout(async () => {
      await covercase_cart_update(cartItem);
  }, 1000)
});

var updatedResp

document.addEventListener("cart:refresh", function (e) {
  updatedResp = e ;
  cartItem = e.detail?.cart?.items || [];
  engrv_cart_update(cartItem);
  corp_cart_update(cartItem);
  setTimeout(() => {
    let refurbishedArray = cartItem.filter(item => item.properties && item.properties.refurbished !== undefined);
    if(refurbishedArray.length > 0) {
      Shopify.cartNote(refurbishedArray.length > 0 ? 'refurbished' : '');
    }
    if(corpproductArray.length > 0) {
      Shopify.cartNote(corpproductArray.length > 0 ? 'corporate' : '');
    }
  }, 10)

  setTimeout(async () => {
      await covercase_cart_update(cartItem);
  }, 1000)
});


// Function to update cart items
function updateCartItems(updates, successCallback) {
  $.ajax({
    type: 'POST',
    url: '/cart/update.js',
    data: { updates: updates },
    dataType: 'json',
    success: successCallback,
    error: function (xhr, status, error) {
      console.error("Error updating cart:", error);
    }
  });
}


function onCheckoutEngrav() {
  const updates = {};
  // Create an object with item IDs to be removed set to 0 quantity
  cartItem.forEach(item => {
    if (!engravproductArray.includes(item)) {
      updates[item.id] = 0;
    }
  });
  updateCartItems(updates, function (cart) {
    dispatch_cartUpdate(cart);
    // console.log("non-engavItems removed successfully!");
    refreshCartUI();
  });
}

function onCheckoutwithoutengrav() {
  const updates = {};
  // Create an object with item IDs from engravproductArray set to 0 quantity
  engravproductArray.forEach(item => {
    updates[item.id] = 0;
  });
  updateCartItems(updates, function (cart) {
    dispatch_cartUpdate(cart);
    // console.log("engavItems removed successfully!");
    refreshCartUI()
    Shopify.cartNote('');
  });
}

function CheckoutWithCorporate() {
  const updates = {};
  // Create an object with item IDs to be removed set to 0 quantity
  cartItem.forEach(item => {
    if (!corpproductArray.includes(item)) {
      updates[item.id] = 0;
    }
  });
  
  updateCartItems(updates, function (cart) {
    dispatch_cartUpdate(cart);
    // console.log("non-engavItems removed successfully!");
    refreshCartUI();
  });
}

function CheckoutWithoughtCorporate() {
  const updates = {};
  // Create an object with item IDs from engravproductArray set to 0 quantity
  corpproductArray.forEach(item => {
    updates[item.id] = 0;
  });
  updateCartItems(updates, function (cart) {
    dispatch_cartUpdate(cart);
    // console.log("engavItems removed successfully!");
    refreshCartUI();
    Shopify.cartNote('');
  });
}

// helper function which will remove normal products
function CheckoutWithCoverCase() {
  const updates = {};
  // Create an object with item IDs to be removed set to 0 quantity
  $.getJSON('/cart.js', function(cart) {

    const ids = coverProductArray.map(product => product.id);
    
    cart.items.forEach(item => {
      if (!ids.includes(item.id)) {
        updates[item.id] = 0;
      }
    });
    

    updateCartItems(updates, function (cart) {
      dispatch_cartUpdate(cart);
      // console.log("non-CoverCase removed successfully!");
      refreshCartUI(cart);
    });
  })
}

// helper function which will remove CoverCase products
function CheckoutWithoughtCoverCase() {
  const updates = {};
  // Create an object with item IDs from engravproductArray set to 0 quantity
  coverProductArray.forEach(item => {
    updates[item.id] = 0;
  });
  updateCartItems(updates, function (cart) {
    dispatch_cartUpdate(cart);
    refreshCartUI();
    Shopify.cartNote('');
  });
}

function refreshCartUI(cart) {
  document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", { bubbles: true }));
  document.getElementById("mini-cart").open = true;
  setTimeout(function () {
    Shopify.cart_item_count();
    cart_bubble();
  }, 1500);
}

$(document).on("click", ".pdp-custom-cta-button", function (e) {
  e.preventDefault();
  let id = $(this).parents('.pdp-inner').find('form [name="id"]').val();
  id = parseInt(id);
  let quantity = $(this).attr('data-qty');
  quantity = parseInt(quantity);
  $.ajax({
    url: "/cart/add.js",
    dataType: "json",
    cache: !1,
    type: "post",
    data: { id: id, quantity: quantity },
    success: function (e) {
      dispatch_cartUpdate(e);
      document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
        bubbles: !0
      })), document.getElementById("mini-cart").open = !0, setTimeout(function () {
        Shopify.cart_item_count();
        cart_bubble();
      }, 1500)
    }
  })
});

$('.custom_discount_finder_btn').click(function () {
  $('.custom_discount_filder_container').attr('open_finder', true);
});

$('.custom_kartdiscount_container.custom_kart_Discount').addClass('discount_applied');
$('.custom_kartdiscount_container.custom_kart_Discount').addClass('discount_added');
$('.custom_kart_Discount .discountCode_details_container').addClass('show');

var discount_finder_apply_btn = $('.discount_finder_btn_holder .discount_finder_apply_btn');
$('#af_kd_custom_coupon_text').on('input', function () {
  $(this).val().length > 0 ? discount_finder_apply_btn.addClass('discount_finder_active_btn') : discount_finder_apply_btn.removeClass('discount_finder_active_btn');
});

$('#af_tagged_discounts .af_coupon_code').html() == undefined || $('#af_tagged_discounts .af_coupon_code').html() == '' ? sessionStorage.removeItem('applyCoupun') : '';
Shopify.cartUpdate = function (cartJson) {
  $('.custom_discount_finder_btn').click(function () {
    $('.custom_discount_filder_container').attr('open_finder', true);
  });
  var total_discount_amount = $('.discount_details').attr('data-discountAmount');
  var offer_discount_code = $('.discount_details').attr('data-discountCode');
  sessionStorage.setItem('total_discount_amount', total_discount_amount);
  sessionStorage.setItem('offer_discount_code', offer_discount_code);
  setTimeout(function () {
    $('.custom_kartdiscount_container.custom_kart_Discount').addClass('discount_applied');
    $('.custom_kartdiscount_container.custom_kart_Discount').addClass('discount_added');
    $('.custom_kart_Discount .discountCode_details_container').addClass('show');
  }, 500);

  var discount_finder_apply_btn = $('.discount_finder_btn_holder .discount_finder_apply_btn');
  $('#af_kd_custom_coupon_text').on('input', function () {
    $(this).val().length > 0 ? discount_finder_apply_btn.addClass('discount_finder_active_btn') : discount_finder_apply_btn.removeClass('discount_finder_active_btn');
  });
};


// Anything copied goes as a link
function addLink() {
  var body_element = document.getElementsByTagName('body')[0];
  var selection;
  selection = window.getSelection();
  var pagelink = "<br /><br /> Read more at: <a href='" + document.location.href + "'>" + document.location.href + "</a><br />";
  var copytext = selection + pagelink;
  var newdiv = document.createElement('div');
  newdiv.style.position = 'absolute';
  newdiv.style.left = '-99999px';
  body_element.appendChild(newdiv);
  newdiv.innerHTML = copytext;
  selection.selectAllChildren(newdiv);
  window.setTimeout(function () {
    body_element.removeChild(newdiv);
  }, 0);
}
document.oncopy = addLink;


//banner personalised popup
if (document.querySelector("[data-popup-variant-id]")) {
  document.querySelector(".banner_link").addEventListener("click", function (e) {
    e.preventDefault();
    let variantData = Object.values(variant_personalization_id);
    let variantId = document.querySelector(".banner_link").getAttribute("data-popup-variant-id");
    for (let i = 0; i < variantData.length; i++) {
      if (variantId == variantData[i].id) {
        //adding the info into the popup
        nonengv_prod_price = $(".engrav:checked").attr("variant-price");
        engraving_price = parseInt(variantData[i].engraving_price);
        engraving_price = engraving_price > 0 ? `At just ₹${variantData[i].engraving_price}*` : `Free`;
        $('.submit-personalization').attr('data-varientid', variantData[i].id);
        $('.personalization-image-wrapper img').attr('src', variantData[i].image);
        $(".personalization-sub-heading").text(engraving_price);
        $(".personalization-image-wrapper .text-overlay").attr('style', variantData[i].style);
        const show = variantData[i].available === "true";
        $(".cutomized-btn, .buy-now-btn, .desktop_reviews_wrapper .offer-callout-simple.personalised, .offer-callout-simple.personalised, .button.custom-prebook, .banner_link.pdp-personalized").toggleClass("customized-hidden", !show);
        $(".cutomized-btn~#AddToCart").toggleClass("customized-hidden", show);
        $(".#gokwik-buy-now").toggleClass("customized-hidden", show);

        // for opening the popup
        var personalizationModalOverlay = document.querySelector('.personilaztion-message-modal-overlay');
        var personalizationModal = document.querySelector('.personilaztion-message-modal');
        personalizationModalOverlay.classList.remove('hide')
        personalizationModal.classList.remove("hide")
        document.body.classList.add('noScroll');
      }
    }
  });
}


// on DOMLOAD store product image in local storage
// document.addEventListener("DOMContentLoaded", (event) => {
//  if($('.pdp')) {
//    if(document.querySelector(".pdp-banner-thumbnail img") == null){
//      // Nothing
//    }else{
//      if(document.querySelector(".pdp-banner-thumbnail img").src == null){
//        document.querySelector(".pdp-banner-thumbnail").style.display = "none";
//        document.querySelector(".pdp-banner-image").style.display = "none";
//      }
//    }
//    if(document.querySelector(".pdp-banner-thumbnail")){
//      localStorage.setItem("pdp-banner",document.querySelector(".pdp-banner-thumbnail").getAttribute("data-src"));
//    }
//  }
// });


/* for video animation */
class videoAnimation extends HTMLElement {
  constructor() {
    super();
    this.container = this.querySelector(".animation-wrapper");
    this.FPS = 60;
    this.FRAMES = 120;
    this.currentScrollPosition = 0;
    if (window.innerWidth < 768) {
      this.video = this.querySelector('#animation-video');
      this.rootMargin = '0px 0px -580px 0px';
    } else if (window.innerWidth > 1600) {
      this.video = this.querySelector('#animation-video-desktop');
      this.rootMargin = '0px 0px -800px 0px';
    } else {
      this.video = this.querySelector('#animation-video-desktop');
      this.rootMargin = '0px 0px -600px 0px';
    }

    //pause the video
    this.video.pause();
    var _this = this;
    //calculating the frames
    if (parseInt(this.getAttribute("data-duration")) > 0) {
      _this.FRAMES = parseInt(this.getAttribute("data-duration")) * 60;
      _this.video.pause();
      _this.video.currentTime = 0;
      _this.style.height = Math.ceil(parseInt(this.getAttribute("data-duration"))) * 600 + "px";
    }

    this.video.addEventListener('loadedmetadata', function (e) {
      _this.FRAMES = _this.video.duration * 60;
      _this.video.pause();
      _this.video.currentTime = 0;
      _this.style.height = Math.ceil(_this.video.duration) * 600 + "px";
    });

    this.removeFixed();
    window.onbeforeunload = () => {
      window.scrollTo(0, 0);
    }
  }
  connectedCallback() {
    this.Call();
  }

  removeFixed() {
    //remove fixed position and add relative
    if (window.scrollY < 10) {
      document.querySelector(".animation-wrapper").style.position = "relative";
      document.querySelector(".animation-wrapper").style.removeProperty("top");
    }
  }

  currentElementScrollPosition() {
    this.currentElementScrollPosition = function () { }; // kill it as soon as it was called by assigning it to empty function
    this.currentScrollPosition = window.scrollY;
  }

  Call() {
    const HANDLE_OBSERVER_VIDEO = (entries, videoObserver) => {
      if (entries[0].isIntersecting) {
        this.scrollEvent();
        this.currentElementScrollPosition();
        this.container.style.position = "fixed";
        if (window.innerWidth < 768) {
          this.container.style.top = "7.5%";
        } else if (window.innerWidth > 1600) {
          if (window.location.href.includes("/pages/nirvana-ion-anc")) {
            this.container.style.top = "16%";
          } else {
            this.container.style.top = "8.5%";
          }
        } else {
          if (window.location.href.includes("/pages/nirvana-ion-anc")) {
            this.container.style.top = "24%";
          } else {

            this.container.style.top = "11.5%";
          }
        }
      } else {
        this.container.style.position = "relative";
        this.container.style.removeProperty("top");
      }

    };
    const VIDEO_OBSERVER = new IntersectionObserver(HANDLE_OBSERVER_VIDEO, {
      rootMargin: this.rootMargin
    });
    if (this.container != null) {
      VIDEO_OBSERVER.observe(this);
    }
  }

  scrollEvent() {
    let _this = this;
    window.addEventListener('scroll', function (e) {
      var time = Math.abs(((window.scrollY - _this.currentScrollPosition) / 1000) * 120 / 60);
      if (time < (_this.video.duration - 0.1))
        _this.video.currentTime = time;
    });
  }

}

customElements.define("video-animation", videoAnimation);


// openAr function
function openAr() {
  var modelElement = document.querySelector('model-viewer').shadowRoot;
  // Access the element inside the shadow DOM
  var shadowElement = modelElement.querySelector('.ar-button');
  // click the button
  shadowElement.click();
}

// if (navigator.platform === 'iPad' || navigator.platform === 'iPhone' || navigator.platform === 'iPod') {
//     document.querySelector(".ar-main-container").style.display = "none";
// }



//bundle add to cart
function bundleATC(product) {
  let data = {
    'items': [],
    sections: ["mini-cart"]
  }
  let productArray = product.split(",");
  for (let i = 0; i < productArray.length; i++) {
    data.items.push({ 'id': productArray[i], 'quantity': 1, "properties": { 'bundle': `true-${product}` } });
  }
  $.ajax({
    url: "/cart/add.js",
    dataType: "json",
    cache: !1,
    type: "post",
    data: data,
    success: function (e) {
      dispatch_cartUpdate(e);
      document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
        bubbles: !0
      }));
      document.getElementById("mini-cart").open = !0,
        Shopify.cart_item_count();
      if ($('.header__cart-count.header__cart-count--floating.bubble-count').text() != '0') { $('.header__cart-count.header__cart-count--floating.bubble-count').removeClass("d-none") } else { $('.header__cart-count.header__cart-count--floating.bubble-count').addClass("d-none") }
    }
  });
}



// CT Event for Search Categories
$(".algolia-trending-item").click(function () {
  let algolia_trending_item = $(this).children(".algolia-trending-label").text();
  clevertap.event.push('Categories on Seach Clicked', {
    'Category': algolia_trending_item
  });
});

// #todo: KD Window 2 Tabs
$(document).on('click', '.custom_discount_finder_btn', function () {
  const tabArr = [];
  $('.custom-discount-finder .nav-tabs .nav-link').each(function() {
    const tabPaneId = $(this).attr('href');

    if ($(tabPaneId).children().length === 0) {
      $(this).parent().hide();
    } else {
      $(this).parent().show();
      tabArr.push(tabPaneId);
    }
  });

  if (tabArr.length > 0) {
    $(tabArr[0]).parent().show();
    $('.custom-discount-finder .nav-tabs .nav-link[href="' + tabArr[0] + '"]').tab('show');
  }

});

// #todo: Show/Hide Bank offers Additional details
$('.add_discount_cta_btn').each(function() {
  $(this).click(function() {
    const btnText = $(this).text();
    const updatedText = btnText == "View More" ? "View Less" : "View More"
    $(this).text(updatedText)
    $(this).parent('.discount_finder_item_cta_btn').siblings('.additional-bank-desc').slideToggle()
  })
})

// PLP product-grid layout changer
  class LayoutToggler extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.attachEventListeners();
    }

    attachEventListeners() {
      if (document.querySelector('.button-layout__list')) {
        document.querySelector('.button-layout__list').addEventListener('click', (event) => {
          this.layoutSwitcher(event);
        });
      }

      if (document.querySelector('.button-layout__grid')) {
        document.querySelector('.button-layout__grid').addEventListener('click', (event) => {
          this.layoutSwitcher(event);
        });
      }
    }

    layoutSwitcher(event) {
      const currentTarget = event.currentTarget;
      const listLayoutButton = document.querySelector('.button-layout__list');
      const gridLayoutButton = document.querySelector('.button-layout__grid');
      const facetsProductList = document.querySelector('product-list');

      if (currentTarget.classList.contains('button-layout__list')) {
        if (facetsProductList && !facetsProductList.classList.contains('grid-view')) {
          listLayoutButton.classList.add('d-none');
          gridLayoutButton.classList.remove('d-none');
          facetsProductList.classList.add('grid-view');
          this.mode = 'grid-view';
        }
      } else if (currentTarget.classList.contains('button-layout__grid')) {
        if (facetsProductList && facetsProductList.classList.contains('grid-view')) {
          gridLayoutButton.classList.add('d-none');
          listLayoutButton.classList.remove('d-none');
          facetsProductList.classList.remove('grid-view');
          this.mode = 'list-view';
        }
      }
    }
  }

  customElements.define('layout-toggler', LayoutToggler);

  // helper function which will check the selected variant has engrav or not
  function checkEngraveVariantAvailability(selectedVariantLabel, noscriptElementSelector = '#engrave-variants') {
    let hasEngraveOption = false;
    const noscriptElement = document.querySelector(noscriptElementSelector);

    if (noscriptElement && selectedVariantLabel) {
      const noscriptHTML = noscriptElement.innerHTML;
      const parser = new DOMParser();
      const parsedDocument = parser.parseFromString(noscriptHTML, 'text/html');
      const options = parsedDocument.querySelectorAll('option');

      options.forEach(option => {
        const engraveTitle = option.getAttribute('data-engrave-title');
        if (engraveTitle === selectedVariantLabel) {
          const dataEngravInventory = parseInt(option.getAttribute('data-inventory'));
          const dataCustomEngravInventory = parseInt(option.getAttribute('data-inventory-limit'));

          if (!isNaN(dataCustomEngravInventory)) {
            if (dataEngravInventory <= dataCustomEngravInventory) {
              hasEngraveOption = false; // Hide elements when inventory is less
            } else {
              hasEngraveOption = true; // Show elements when inventory is greter
            }
          } else if (dataEngravInventory == 0) {
            // engrave is not avaialable
            hasEngraveOption = false;
          } else {
            // engrave is available
            hasEngraveOption = true;
          }
        }
      });
    }

    return hasEngraveOption;
  }

  /* helper fucntion to chech seleted option has custom-inventory */
  function getInventoryAttributes(optionValue) {
    // Find the matching input and check its data-inventory and data-inventory-limit attributes
    const matchingInput = [...document.querySelectorAll('.product-form__variants .color-swatch-list input')]
      .find(input => input.value === optionValue && input.getAttribute('data-inventory-limit'));

    if (matchingInput) {
      // Return an object with both attributes
      return {
        freebieSku: matchingInput.getAttribute('data-cover-freebie-sku')
      };
    }

    if (matchingInput2) {
      const offerPrice = matchingInput2.getAttribute('data-discounted-price')
      $('.offer--price').text(offerPrice)
    }

    return null; // Return null if no matching input is found
  }

  
  const selectedVariantLabel = document.querySelector('.product-form__option-value');

  if (selectedVariantLabel) {
    const selectedVariantContent = selectedVariantLabel.textContent;
    const isEngraveAvailable = checkEngraveVariantAvailability(selectedVariantContent);
    const inventoryAttributes = getInventoryAttributes(selectedVariantContent);
  
    if (inventoryAttributes) {
      // checking selected variant has freebie skus
      let freebiSku = inventoryAttributes.freebieSku;
  
      if (freebiSku && freebiSku !== 'null') {
        window.isEngraveAvailableFlag = isEngraveAvailable;
      } else if (window.isEngraveAvailableFlag == true) {
        window.isEngraveAvailableFlag = false
      }
    }
  }

  /* ==Below code is written for FREEBIE COVER fun()== */
  // helper function used to show the loader animation
  function showLoader(loader, text) {
    if (loader.classList.contains('d-none')) {
      loader.classList.remove('d-none');
    }

    if (!loader.classList.contains('loader')) {
      loader.classList.add('loader');
    }

    if (!text.classList.contains('d-none')) {
      text.classList.add('d-none');
    }
  }

  // helper function used to hide the loader animation
  function removeLoader(loader, text) {
    if (!loader.classList.contains('d-none')) {
      loader.classList.add('d-none');
    }

    if (loader.classList.contains('loader')) {
      loader.classList.remove('loader');
    }

    if (text.classList.contains('d-none')) {
      text.classList.remove('d-none');
    }
  }

  // Helper function for cover-case product adding
  function coverFreebieAddToCart(master, cover) {
    const formData = {
      items: [
        { id: master, quantity: 1, properties: { _master: 'true' } },
        { id: cover, quantity: 1, properties: { _coverproduct: 'cover-freebee' } }
      ],
      sections:["mini-cart"]
    };

    // Send the request to add products to the cart
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      localStorage.setItem("_coverproduct","added");
      localStorage.setItem("_masterProductID", master);
      // dispatch_cartUpdate(data);
      document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
        bubbles: !0,
        detail: {
          cart : data
        }
      })), document.getElementById("mini-cart").open = !0, setTimeout(function () {
        Shopify.cart_item_count();
        cart_bubble();
      }, 1500)
    })
    .catch(error => {
      console.error('Error adding products to cart:', error);
    });
  }

  // Helper function for normal product adding
  function normalAddToCart(master) {
    // Create the formData for a single product
    let productVariantId = master;

    let formData = {
      items: [
        {
          id: productVariantId,
          quantity: 1
        }
      ]
    };

    // Send the request to add the product to the cart
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      dispatch_cartUpdate(data);
      document.documentElement.dispatchEvent(new CustomEvent("cart:refresh", {
        bubbles: !0
      })), document.getElementById("mini-cart").open = !0, setTimeout(function () {
        Shopify.cart_item_count();
        cart_bubble();
      }, 1500)
    })
    .catch(error => {
      console.error('Error adding product to cart:', error);
    });
  }

  // FREEBIE buttons selector
  const freebieAtcButton = document.querySelector('#freebie-add-to-cart');
  const freebieBuyButton = document.querySelector('#freebie-buy-now');
  
  const uniappsApiUrl = "https://boat.prod-aps1.unifyapps.com/api-endpoint/serviceabilityEdd/serviceability-check";
  const headers = {
    "Content-Type": "application/json",
    "Authorization": "Basic c2F5eWFtOkpAaW4uNTE5NA=="
  };

  // attaching event-listners to button
  if (freebieAtcButton) {
    freebieAtcButton.addEventListener('click', freebieHandler);
  }
  if (freebieBuyButton) {
    freebieBuyButton.addEventListener('click', freebieHandler);
  }

  // helper function which will add covercase freebie product or normal product
  function freebieHandler(event) {

    const button = event.currentTarget;
    const loader = button.querySelector('.loader-button__loader');
    const buttonText = button.querySelector('.loader-button__text');

    if (!button.hasAttribute('disabled')) {button.setAttribute("disable", "")}
    showLoader(loader, buttonText);

    const masterProductId = button?.getAttribute('data-master-id');
    const masterProductSku = button?.getAttribute('data-master-sku');

    const selectedCaseSku = button?.getAttribute('data-selected-freebee-sku');
    const selectedCaseId = button?.getAttribute('data-selected-freebee-id');

    let hasCoverFreebie = localStorage.getItem("_coverproduct") == 'added' ? true : false;

    if (hasCoverFreebie) {
      let sesstionMasterId = localStorage.getItem("_masterProductID");

      if (sesstionMasterId === masterProductId) {
        // if same freebie variant is present in cart
        let error = document.createElement("span");
        error.classList.add('error-msg');
        error.innerText = "Freebie product is already available";
        button.closest('.btn_container').after(error);

        setTimeout(() => {
          error.remove(); 
          removeLoader(loader, buttonText);
          if (button.hasAttribute('disabled')) {button.removeAttribute("disable", "")}
        }, 2000);
      } else if (sesstionMasterId != masterProductId && masterProductId != '') {
          // Normal product add to cart
          normalAddToCart(masterProductId);

          setTimeout(() => {
            removeLoader(loader, buttonText);
            if (button.hasAttribute('disabled')) {button.removeAttribute("disable", "")}
          }, 2000);
        }
      
      return true;
    }

    if (masterProductSku == '' && masterProductId == '' && selectedCaseSku == '' && selectedCaseId == '') {
      removeLoader(loader, buttonText); 
      if (button.hasAttribute('disabled')) {button.removeAttribute("disable", "")}

      return;
    }

    const data = {
      "oderItems": [
        {
          "sku": masterProductSku,
          "qty": "1"
        }
      ],
      "zipcode": "122008",
      "shippingState": "Haryana",
      "callFromService": "Shopify - PDP",
      "isPersonalized": "0",
      "isSiliconCover": "1"
    }

    fetch(uniappsApiUrl, {
      method: "POST",
      headers: headers,
      body: JSON.stringify(data),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        let hasCoverProductRemoved = localStorage.getItem("_coverfreebee") === "removed";

        if (data.result === "Serviceable" && !hasCoverProductRemoved) {
          const serviceableSkus = data.serviceabilityItems.map((item) => item.sku_item);

          if (serviceableSkus.length === 2) {
            const [serviceableSilverProduct, serviceableMasterProduct] = serviceableSkus;
            coverFreebieAddToCart(masterProductId, selectedCaseId);
          }
          return;
        }

        if (data.result === "Inventory Not Available for Fulfillment") {
          normalAddToCart(masterProductId);
        }
      })
      .catch(error => {
        console.error('Fetch error:', error);
      })
      .finally(() => {
        removeLoader(loader, buttonText);
        if (button.hasAttribute('disabled')) {button.removeAttribute("disable", "")}
      });
  } 

  // personalization freebie flow
  const personalizationFreebieAtc = document.querySelector('#personalization-freebie-atc');

  if (personalizationFreebieAtc) {
    personalizationFreebieAtc.addEventListener("click", personalizationFreebie);
  }

  function personalizationFreebie() {
    if (document.querySelector('.personalized-modal-close')) {
      document.querySelector('.personalized-modal-close').click();
    }

    if (document.querySelector('#freebie-add-to-cart')) {
      document.querySelector('#freebie-add-to-cart').click();
    }
  }

  // covercase modal JS
  // Main code for handling outside the custom component
  const covercaseOpenBtn = document.querySelector('.covercase-cta');
  const covercaseOverlay = document.querySelector('.covercase-popup__overlay');
  const covercasePopup = document.querySelector('.covercase-popup__modal');
  const bodyElement = document.body;

  if (covercaseOpenBtn) {
      covercaseOpenBtn.addEventListener('click', (e) => {

        var targetProductId = event.target.getAttribute('data-product-id');

        if (covercaseOverlay && covercaseOverlay.classList.contains('hide')) {
          covercaseOverlay.classList.remove('hide');
        }
        
        if (covercasePopup && covercasePopup.classList.contains('hide')) {
          covercasePopup.classList.remove('hide');
        }

        if (bodyElement && !bodyElement.classList.contains('noScroll')) {
          bodyElement.classList.add('noScroll')
        }

        const coverCaseModal = document.querySelector('covercase-modal');
        coverCaseModal.init();
      });
  }

  // CoverCase modal component
  class covercaseModal extends HTMLElement {
    constructor() {
        super();
    }

    connectedCallback() {
        this.attachEventListeners();

        const pdpColorSwatches = document.querySelectorAll('.product-form__variants .color-swatch input');
        const colorSwatches = this.querySelectorAll('.color-swatch-list input');
        const checkedSwatch = Array.from(pdpColorSwatches).find(swatch => swatch.checked);

        if (checkedSwatch) {
          let finalSwatchValue = ''; 
          const checkedValue = checkedSwatch.value;
          const matchFound = this.getAttribute('data-match-found');

          finalSwatchValue = matchFound || checkedValue;

          colorSwatches.forEach((swatch) => {
            if (swatch.value === finalSwatchValue) {
              swatch.checked = true;
            }
          });
        }

        if (localStorage.getItem("targetProductId")) {
          localStorage.removeItem("targetProductId");
        }
    }

    attachEventListeners() {
        const colorSwatches = this.querySelectorAll('.color-swatch-list input');
        const covercaseCloseBtn = this.querySelector('#covercase-close-button');
        const covercaseOverlay = document.querySelector('.covercase-popup__overlay');
        const covercasePopup = document.querySelector('.covercase-popup__modal');
        const bodyElement = document.body;

        colorSwatches.forEach((swatch) => {
            swatch.addEventListener('change', (event) => {
                this.colorSwatchSwitcher(event);
            });
        });

        if (covercaseCloseBtn) {
            covercaseCloseBtn.addEventListener('click', () => {
                if (covercaseOverlay && !covercaseOverlay.classList.contains('hide')) {
                    covercaseOverlay.classList.add('hide');
                }
                if (covercasePopup && !covercasePopup.classList.contains('hide')) {
                    covercasePopup.classList.add('hide');
                }
                if (bodyElement && bodyElement.classList.contains('noScroll')) {
                  bodyElement.classList.remove('noScroll')
                }
            });
        }
    }

    async init() {
      const targetProductId = localStorage.getItem("targetProductId");
      const currentProductId = this.getAttribute('data-product-id');

      if (targetProductId === currentProductId) {
        this.closeLoadingSkeleton(); 
        return false;
      }

      try {
        const productId = this.getAttribute('data-product-id');
        const variantCoverCaseSetup = this.getAttribute('data-freebee-handle');
        const colorSwatches = this.querySelectorAll('.custom-color__swatch .color-swatch');
        const serviceabilityUrl = 'https://boat.prod-aps1.unifyapps.com/api-endpoint/serviceabilityEdd/serviceability-check';

        const data = {
          "oderItems": [
            {
              "productId": productId,
              "qty": "1"
            }
          ],
          "zipcode": "122008",
          "callFromService": "API-TEST",
          "isPersonalized": "0",
          "isSiliconCover": "1"
        };

        const headers = {
          "Authorization": "Basic c2F5eWFtOkpAaW4uNTE5NA==",
          "Content-Type": "application/json"
        };

        const response = await fetch(serviceabilityUrl, {
          method: "POST",
          headers: headers,
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }

        const responseData = await response.json();

        if (responseData.result === 'Serviceable') {
          const availableVariantIds = responseData.serviceabilityItems.map(item => item.variantId);
          localStorage.setItem("targetProductId", productId);

          const entries = variantCoverCaseSetup
            .replace(/^{|}$/g, '') 
            .split(',')            
            .map(entry => entry.split(':').map(item => item.trim().replace(/"/g, ''))); 

          const resultArray = entries.map(([key, value]) => ({
            variantId: key,
            url: value
          }));

          const covercasePopupHeading = this.querySelector('.covercase-popup-heading');
          const covercaseResponseHeading = this.querySelector('.covercase-heading');
          const covercaseColorSwatch = this.querySelector('.custom-color__swatch');
          const covercaseTerms = this.querySelector('.covercase-decription');

          if (covercaseResponseHeading.classList.contains('d-none') || 
              covercaseColorSwatch.classList.contains('d-none') || 
              covercaseTerms.classList.contains('d-none')
          ) {
            covercasePopupHeading.classList.remove('d-none');
            covercaseColorSwatch.classList.remove('d-none');
            covercaseTerms.classList.remove('d-none');
          }

          if (!covercaseResponseHeading.classList.contains('d-none')) {
            covercaseResponseHeading.classList.add('d-none');
          }

          // Compare [availableVariantIds === resultArray]
          const matchingUrls = [...new Set(
            resultArray
              .filter(item => availableVariantIds.includes(item.variantId))
              .map(item => item.url)
          )];

          const matchingVariantIds = [...new Set(
            resultArray
              .filter(item => availableVariantIds.includes(item.variantId))
              .map(item => item.variantId)
          )];

          this.resetColorSwatch(matchingVariantIds);

          if (matchingUrls.length != 0) {
            matchingUrls?.forEach((url) => {
              let alteredUrl = `${url}?sections=main-product`;
              let splitedVariantID = url.split('variant=')[1];

              fetch(alteredUrl)
              .then(response => response.text())
              .then((data) => {
                const parser = new DOMParser();
                const responseDOM = parser.parseFromString(data, 'text/html');
                const resfeaturedImg = responseDOM.querySelector('.product__media-item.is-selected .product__media-image-wrapper img').src;
                const covercaseImageWrapper = this.querySelector('.covercase-image-wrapper');

                if (covercaseImageWrapper.classList.contains('custom-image-margin')) {
                  covercaseImageWrapper.classList.remove('custom-image-margin');
                }

                colorSwatches.forEach((swatch) => {
                  var dataSwatchId = swatch.getAttribute('data-cover-freebie-id');

                  if (splitedVariantID === dataSwatchId) {
                    swatch.setAttribute("data-cover-freebie-src",resfeaturedImg);
                  }
                });

                this.setActiveImage();

                setTimeout(() => {
                  this.closeLoadingSkeleton();
                }, 300);
              })
              .catch(error => console.error('Error:', error));
            })
          } else if (matchingUrls.length === 0) {
            // If the res. variant is not matched with metafiled
            this.inventoryUnavailable();
          }
        } else if (responseData.result === 'Inventory Not Available for Fulfillment') {
          // API response is not available
          this.inventoryUnavailable();
        }
      } catch (error) {
        console.error('Fetch error:', error);
        //this.closeLoadingSkeleton();
      }
    }

    setActiveImage() {
      const popUpImg = this.querySelector('.covercase-image-wrapper img');
      const selectedInput = this.querySelector('.custom-color__swatch .color-swatch input:checked');
      if (selectedInput) {
        var parentNode = selectedInput.parentNode;
        var getImageSRC = parentNode.getAttribute('data-cover-freebie-src');
        
        if (parentNode && getImageSRC) {
          popUpImg.src = getImageSRC;
        }
      }
    }

    resetColorSwatch(matchingVariantIds) {
      const colorSwatches = this.querySelectorAll('.custom-color__swatch .color-swatch');
      let firstChecked = false ;

      const matchingIdsSet = new Set(matchingVariantIds);

      colorSwatches.forEach((swatch) => {
        const dataSwatchId = swatch.getAttribute('data-cover-freebie-id');
        const dataSwatchInput = swatch.querySelector('input');

        if (matchingIdsSet.has(dataSwatchId)) {
          if(!firstChecked){
            dataSwatchInput.checked = true;
            firstChecked = true ;
          }
          swatch.classList.remove('d-none');
        } else {
          swatch.classList.add('d-none'); 
        }
      });
    }

    inventoryUnavailable() {
      const covercasePopupHeading = this.querySelector('.covercase-popup-heading');
      const covercaseColorSwatch = this.querySelector('.custom-color__swatch');
      const covercaseTerms = this.querySelector('.covercase-decription');
      const covercaseImageWrapper = this.querySelector('.covercase-image-wrapper');
      const covercaseImage = this.querySelector('.covercase-image-wrapper img');
      const restockingWrapper = this.querySelector('.restocking-cta__wrapper');

      if (!covercaseColorSwatch.classList.contains('d-none') || 
          !covercaseTerms.classList.contains('d-none')
      ) {
        covercasePopupHeading.classList.add('d-none');
        covercaseColorSwatch.classList.add('d-none');
        covercaseTerms.classList.add('d-none');
      }

      if (restockingWrapper.classList.contains('d-none')) {
        restockingWrapper.classList.remove('d-none')
      }

      if (!covercaseImageWrapper.classList.contains('custom-image-margin')) {
        covercaseImageWrapper.classList.add('custom-image-margin');
      }

      covercaseImage.src = 'https://cdn.shopify.com/s/files/1/0057/8938/4802/files/Group_1707479089.png?v=1733402937';
      this.closeLoadingSkeleton();
    }

    onLoadingSkeleton() {
      var covercaseFrame = this.querySelector('.covercase-framed-data');
      var loadingSkeleton = this.querySelector('.loading-skeleton');
      var covercaseDataWrapper = this.querySelector('.covercase-data_rendered');

      covercaseFrame.setAttribute('loading','');

      if (loadingSkeleton && loadingSkeleton.classList.contains('d-none')) {
        loadingSkeleton.classList.remove('d-none');
      }

      if (covercaseDataWrapper && !covercaseDataWrapper.classList.contains('d-none')) {
        covercaseDataWrapper.classList.add('d-none');
      }
    }

    closeLoadingSkeleton() {
      var covercaseFrame = this.querySelector('.covercase-framed-data');
      var loadingSkeleton = this.querySelector('.loading-skeleton');
      var covercaseDataWrapper = this.querySelector('.covercase-data_rendered');

      covercaseFrame?.removeAttribute('loading');

      if (loadingSkeleton && !loadingSkeleton.classList.contains('d-none')) {
        loadingSkeleton.classList.add('d-none');
      }

      if (covercaseDataWrapper && covercaseDataWrapper.classList.contains('d-none')) {
        covercaseDataWrapper.classList.remove('d-none');
      }
    }

    colorSwatchSwitcher(event) {
      this.setActiveImage();
    }

    rerenderCoverCaseModal(selectedVariantId, isCoverAvailable) {
      if (isCoverAvailable === false) {
        return true;
      }
      
      const coverCaseContainer = this.querySelector('.covercase-popup-container');
      const url = `${location.pathname}?variant=${selectedVariantId}&section_id=main-product`;

      fetch(url)
          .then(response => {
              if (!response.ok) {
                  throw new Error('Network response was not ok');
              }
              return response.text();  
          })
          .then(htmlString => {
              const parser = new DOMParser();
              const doc = parser.parseFromString(htmlString, 'text/html');
              const responseCoverCase = doc.querySelector('covercase-modal');

              setTimeout(() => {
                  if (responseCoverCase && responseCoverCase.innerHTML.trim() !== '') {
                      const responseContainer = responseCoverCase.querySelector('.covercase-popup-container');
                      
                      if (responseContainer) {
                          coverCaseContainer.innerHTML = responseContainer.innerHTML;
                          this.attachEventListeners(); // Reattach event listeners with delay
                      }
                  }
              }, 500); 
          })
          .catch(error => {
              console.error('Error:', error);
          });
    }
  }

  customElements.define('covercase-modal', covercaseModal);







    // // Get the element with the product title
    // const titleElement = document.querySelectorAll('h1.product-meta__title.heading.h3');
    
    // titleElement.forEach(title => {
    //   // Replace "Re-newed" with a span containing "Re-newed"
    //   title.innerHTML = title?.innerHTML.replace(
    //     'Re-newed', 
    //     '<span class="red-text">Re-newed</span>'
    //   );
    // })
// global function for bulk order-submit
Shopify.bulkOrderSubmit = async (event)=>{
  document.querySelector('.formsubmit.zcwf_button').value = "Loading..."
  event.preventDefault()
  const formData = new FormData(event.target)
  const today = new Date();

  // Format the date as DD/MM/YYYY
  const day = String(today.getDate()).padStart(2, '0');
  const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based
  const year = today.getFullYear();
  const hours = String(today.getHours()).padStart(2, '0');
  const minutes = String(today.getMinutes()).padStart(2, '0');
  const seconds = String(today.getSeconds()).padStart(2, '0');
  const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;

  // Append the date to the form data
  formData.append('Submitted Date', formattedDate);
  try {
    let response = await fetch('https://script.google.com/a/macros/marmeto.com/s/AKfycbyMOPy2BSSZZKmoS2qceKeSYP4aXhzF57LcbSbpixViOHPVXaj2PsSPqDduTVKHSLtZbA/exec', { method: 'POST', body: formData})
    let response2 = await fetch('https://crm.zoho.in/crm/WebToLeadForm', { method: 'POST', body: formData})
  }
  catch(err) {
    alert('Error occured , try again')
    document.querySelector('.formsubmit.zcwf_button').value = "Submit"
    return ;
  }
  alert('form submitted')
  document.querySelector('.formsubmit.zcwf_button').value = "Submit"

  $("#custom-saleModal").removeClass("show");
  $(".bulk-orders--popup .popover__overlay").hide();
  document.querySelector("body").classList.remove("noScroll");
    
}   

class AnnouncementSlider extends HTMLElement {
  constructor(){
    super()
  }

  connectedCallback(){
    this.placeholderIdx = 0; // Current index of the placeholder
    this.loopTask; // Interval loop for automatic sliding
    this.restartTimer; // Timeout for delaying auto-slide restart
    this.placeholderTiming = {
    duration: 300, // Animation duration in milliseconds
    };
    this.placeholderSelector = this.querySelector('.announcement-placeholder');
    if(!Shopify.announcement_slider.is_single_slide){
      this.attachEventListeners()
    }
    this.placeholders = Shopify.announcement_slider.slides.split('||')

    if(Shopify.announcement_slider.is_autoplay){
      this.loopTask = setInterval(() => this.performSlide("up"), Shopify.announcement_slider.delay);
    }
  }

  performSlide(direction = "up", isManual = false , is_vertical = Shopify.announcement_slider.is_vertical) {

    if (isManual) {
      if(Shopify.announcement_slider.is_autoplay){
        if (this.loopTask) clearInterval(this.loopTask); // Stop the current loop
        if (this.restartTimer) clearTimeout(this.restartTimer); // Clear any existing restart timer
      }
    }

    // Update index based on the direction
    this.placeholderIdx = direction === "up" ? this.placeholderIdx + 1 : this.placeholderIdx - 1;

    // Wrap around the index
    if (this.placeholderIdx >= this.placeholders.length) this.placeholderIdx = 0;
    if (this.placeholderIdx < 0) this.placeholderIdx = this.placeholders.length - 1;

    if (!this.placeholderSelector) return;
    let placeholder = this.placeholders[this.placeholderIdx];
    if(is_vertical){
      // Determine the animation directions
      this.animateIn = direction === "up"
        ? [{ transform: "translateY(120%)", opacity: 0 }, { transform: "translateY(0)", opacity: 1 }]
        : [{ transform: "translateY(-120%)", opacity: 0 }, { transform: "translateY(0)", opacity: 1 }];
  
      this.animateOut = direction === "up"
        ? [{ transform: "translateY(0)", opacity: 1 }, { transform: "translateY(-120%)", opacity: 0 }]
        : [{ transform: "translateY(0)", opacity: 1 }, { transform: "translateY(120%)", opacity: 0 }];
    }
    else {
      this.animateIn = direction === "up"
        ? [{ transform: "translateX(120%)", opacity: 0 }, { transform: "translateX(0)", opacity: 1 }]
        : [{ transform: "translateX(-120%)", opacity: 0 }, { transform: "translateX(0)", opacity: 1 }];
  
      this.animateOut = direction === "up"
        ? [{ transform: "translateX(0)", opacity: 1 }, { transform: "translateX(-120%)", opacity: 0 }]
        : [{ transform: "translateX(0)", opacity: 1 }, { transform: "translateX(120%)", opacity: 0 }];
    }


    // Animate the placeholder out
    this.placeholderSelector.animate(this.animateOut, this.placeholderTiming);
    setTimeout(()=>this.placeholderSelector.innerHTML = '',60)

    setTimeout(() => {
      // Update placeholder text after fading out
      this.placeholderSelector.innerHTML = placeholder;

      // Animate the placeholder in
      this.placeholderSelector.animate(this.animateIn, this.placeholderTiming);
      this.placeholderSelector.style.opacity = "1";
      this.placeholderSelector.style.transform = "translateY(0)";
    }, this.placeholderTiming.duration);

    // Stop automatic sliding if it's a manual operation
    if (isManual) {
      if(Shopify.announcement_slider.is_autoplay){
        if (this.loopTask) clearInterval(this.loopTask); // Stop the current loop
        if (this.restartTimer) clearTimeout(this.restartTimer); // Clear any existing restart timer
        this.restartTimer = setTimeout(() => {
          this.loopTask = setInterval(() => this.performSlide("up"), Shopify.announcement_slider.delay); // Restart the loop after 2 seconds
        }, 2000);
      }
    }
  }

  attachEventListeners(){
    this.querySelector(".announcement-bar-slider button.announcement-prev")?.addEventListener("click", () => {
      this.performSlide("down", true); // Previous slide
    });

    this.querySelector(".announcement-bar-slider button.announcement-next")?.addEventListener("click", () => {
      this.performSlide("up", true); // Next slide
    });
  }

}

customElements.define("announcement-slider", AnnouncementSlider)


class CustomCountdownTimer extends HTMLElement {
  constructor() {
    super();
    this.second = 1000;
    this.minute = this.second * 60;
    this.hour = this.minute * 60;
    this.day = this.hour * 24;
    this.timerInterval = null;
  }

  connectedCallback() {
    this.startTimer();
  }

  disconnectedCallback() {
    clearInterval(this.timerInterval);
  }

  startTimer() {
    const endDate = this.getAttribute('date');
    if (endDate) {
      this.startCountdown(new Date(endDate).getTime());
    } else {
      this.startDailyReset();
    }
  }

  startCountdown(countDownTime) {
    this.timerInterval = setInterval(() => {
      const now = new Date().getTime();
      let distance = countDownTime - now;
      
      if (distance < 1) {
        clearInterval(this.timerInterval);
        // this.startDailyReset();
        return;
      }

      this.updateDisplay(distance);
    }, this.second);
  }

  startDailyReset() {
    this.timerInterval = setInterval(() => {
      const now = new Date();
      const hr = 23 - now.getHours();
      const min = 59 - now.getMinutes();
      const sec = 59 - now.getSeconds();

      this.querySelector('.js-timer-hours').innerText = this.pad2(hr);
      this.querySelector('.js-timer-minutes').innerText = this.pad2(min);
      this.querySelector('.js-timer-seconds').innerText = this.pad2(sec);
    }, this.second);
  }

  updateDisplay(distance) {
    const days = Math.floor(distance / this.day);
    const hours = Math.floor((distance % this.day) / this.hour);
    const minutes = Math.floor((distance % this.hour) / this.minute);
    const seconds = Math.floor((distance % this.minute) / this.second);

    const daysElement = this.querySelector('.custom-days-timer');
    if (days > 0) {
      daysElement.classList.remove('visually-hidden');
      this.querySelector('.js-timer-days').innerText = this.pad2(days);
    } else {
      daysElement.classList.add('visually-hidden');
    }

    this.querySelector('.js-timer-hours').innerText = this.pad2(hours);
    this.querySelector('.js-timer-minutes').innerText = this.pad2(minutes);
    this.querySelector('.js-timer-seconds').innerText = this.pad2(seconds);
  }

  pad2(number) {
    return number < 10 ? '0' + number : number;
  }
}

customElements.define('custom-countdown-timer', CustomCountdownTimer);

let currentURL = location.href;
let cartStr = "/cart";
let cartHashStr = "/#cart";

// Parse query parameters
let urlParams = new URLSearchParams(window.location.search);
let utmSource = urlParams.get('utm_source');

// Run only if utm_source is NOT 'kwikchat'
if (utmSource !== 'kwikchat') {
  if (currentURL.indexOf(cartStr) !== -1) {
    location.href = "/#cart";
  }
  if (currentURL.indexOf(cartHashStr) !== -1) {
    const headerCart = document.querySelector(".header__cart")
    headerCart.setAttribute("aria-expanded", true);
  }
}

// Homepage Banner Views Tracking

document.addEventListener("DOMContentLoaded", function() {
  const banners = document.querySelectorAll(".bootstrap-carousel .item");

  const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
          if (entry.isIntersecting) {
              const bannerElement = entry.target;
              const bannerNumber = parseInt(bannerElement.dataset.index, 10) + 1; // Extract banner number
              const bannerImageText = bannerElement.querySelector(".image_alt").innerText;
              const bannerTitle = bannerImageText ? bannerImageText : "Unknown";
              // console.log(bannerNumber, bannerTitle);


              // Push event to CleverTap
              clevertap.event.push("Homepage Banner View", {
                  "banner_number": bannerNumber,
                  "banner_title": bannerTitle
              });

              // Stop observing once tracked (optional)
              observer.unobserve(bannerElement);
          }
      });
  }, { threshold: 0.5 }); // Trigger when 50% of the banner is in view

  banners.forEach(banner => observer.observe(banner));
});